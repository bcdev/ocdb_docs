{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the Copernicus Ocean Colour Database(OCDB) The Copernicus OCDB","title":"Home"},{"location":"#welcome-to-the-copernicus-ocean-colour-databaseocdb","text":"The Copernicus OCDB","title":"Welcome to the Copernicus Ocean Colour Database(OCDB)"},{"location":"ocdb-api-cli/","text":"The OCDB Command Line Client and Python API Automation and easy access is important. The OCDB database system does, therefore, offer a python command line interface as well as a Python API to access as well as manage submissions and users. Installation To install the CLI and API, please use following steps. git clone https://github.com/bcdev/ocdb-client cd ocdb-client conda env create [conda] activate ocdb-client python setup.py install Configure In order to access the database you need to configure the REST API server address. The default address is https://ocdb.eumetsat.int . cli: ocdb-cli conf https://ocdb.eumetsat.int ocdb-cli cond server_url [some url] python: from ocdb_client.api.OCDBApi import new_api api = new_api() api.config #Out[11]: {'server_url': 'https://ocdb.eumetsat.int'} api.set(server_url=\"[some server url]\") Search Database The database can be searched using the so-called Lucene syntax (https://lucene.apache.org/core/2_9_4/queryparsersyntax.html). The Lucene syntax allows you to query specific fields and also allows to apply logic, chaining of queries, and using wild cards. The first example below for instance attempts to find data files that include the name \"Colleen\" in the investigators meta field. bash: ocdb-cli ds find --expr \"investigators: *Colleen*\" { \"locations\": {}, \"total_count\": 900, \"datasets\": [ { \"id\": \"5c6d632661d82d28bf8ce807\", \"path\": \"URI/Mouw/NIH-NSF_Lake_Erie/URI_Lake_Erie_2013/archive/URI_Lake_Erie20130820_2_0m_ag.txt\" }, ... python: api.find_datasets(expression=\"investigators:*Colleen*\") { \"locations\": {}, \"total_count\": 900, \"datasets\": [ { \"id\": \"5c6d632661d82d28bf8ce807\", \"path\": \"URI/Mouw/NIH-NSF_Lake_Erie/URI_Lake_Erie_2013/archive/URI_Lake_Erie20130820_2_0m_ag.txt\" }, ... Possible fields are : path : received : Date received identifier_product_doi : Product DOI investigators : Primary Investigators (PIs) of the experiment affiliations : The affiliations of the PIs. contact : Contact (email address) of the PIs. experiment : Identifier of the experiment cruise : Identifier of the cruise data_file_name : The name of the original data file data_type : The data type (e.g. scan) documents : Comma separated list of uploaded supplementary documents data_status : e.g. final start_date : Start of measurements, end_date : End of measurements water_depth : Water depths during measurement measurement_depth : Measurement depth secchi_depth : Secchi depth missing : Fill value delimiter : Delimiter of data file e.g. tab units : Comma separated list of units e.g. \"nm,1/m,1/m\" Get Datasets The search engine returns a list of datasets. In order to retrieve the actual data you, you will have to use the result and obtain dataset IDs. A dataset ID can be used to get actual data: python: api.get_dataset(dataset_id='5c6d632661d82d28bf8ce807', fmt='pandas') Out[10]: wavelength ag ag_sd 0 300 6.1015 0.2407 1 301 5.9565 0.2389 2 302 5.8140 0.2352 3 303 5.6763 0.2318 ... User Management Login User : The login procedure will ask for a user name and password. You can specify the password as an option. However, under normal circumstances we advice to use the command line prompt. The example below will login a user with the user name 'admin'. 'admin' is a dummy user that should be present in the Copernicus production database. Scott does not have any privileges. cli: ocdb-cli user login --user scott --password tiger python: api.login_user(username='scott', password='tiger') Add User : To add a user, specify the required user information cli: ocdb-cli user add -u admin -p admin -fn Submit -ln Submit -em jj -ph hh -r admin python: api.add_user(username='<user_name>', password='<passwd>', roles=['<role1>, <role2>']) You need to have administrative access rights to be able to complete this action. Get User Information : cli: ocdb-cli user get --user scott python: api.get_user(name=<user_name>) You need to have administrative access rights to perform this operation for any user. Users can request their own information without restrictions. Delete a User : cli: ocdb-cli user delete --user scott python: api.delete_user(name=<user_name>) You need to have administrative access rights to be able to complete this action Update an Existing User : cli: ocdb-cli user update --key last_name --value <your value> python: api.update_user(name=<user_name>, key=<key>, value=<value>) You need to have administrative access rights to perform this operation for any user. Users can update their own information without restrictions. Managing Submissions Get Submission : cli: ocdb-cli sbm get --submission-id <submission-id> python: api.get_submission(<submission-id>) You need to have administrative access rights to perform this operation for any submission. Users can monitor their own submissions without restrictions. Get Submissions for a specific User : cli: ocdb-cli sbm user --user-id <user-id> python: api.get_submissions_for_user(<user-id>) You need to have administrative access rights to perform this operation for any submission. Users can monitor their own submissions without restrictions. Delete Submission : cli: ocdb-cli sbm delete --submission-id <submission-id> python: api.delete_submission(<submission-id>) You need to have administrative access rights to perform this operation for any submission. Users can delete their own submissions without restrictions. Update Submission Status : This command allows to manipulate the status of a submission. Some status changes will have impact on whether the data are searchable or not. The following list shows the different stati and the impact on the accessibility when changing them: SUBMITTED: A dataset has been submitted. Usually also means that the data has issues. This will trigger the automated validation process VALIDATED: The data has been submitted and is clean PROCESSED: The data has been processed into the database and is findable, but only to admins and the submitting user PUBLISHED: The data has been processed into the database and is publicly available CANCELED: The data submission has been canceled. Setting this status will remove the data from the database and will not be findable anymore PAUSED: The user pauses the submission. This indicates that the admin shall not publish or process the data cli: ocdb-cli sbm status --submission-id <submission-id> --status <status> python api.update_submission_status(<submission-id>, <status>) You need to have administrative access rights to perform this operation for any submission. Users can submit, cancel and pause their own submissions without restrictions. Download Submission File : This command will download a single submission file. Please be aware that the version of the file is that of the submission status. Do not use this feature to download data, instead use the \"dataset\" API. cli: ocdb-cli sbm download --submission-id <submission-id> --index <index> python api.download_submission_file(<submission-id>, <index>) Upload Submission File : The aim of this feature is to enable users and admin to replace an existing submission file. You can replace both documents and measurements. cli ocdb-cli sbm upload --submission-id <submission-id> --index <index> --file <file> python api.upload_submission_file(<submission-id>, <index>, <file>) You need to have administrative access rights to perform this operation for any submission file. Users can update their own submission files without restrictions. General Get License ocdb-cli lic List of functions/CLI commands +-----------+----+--------+--------------------------------------------+ | Operation | CL | API | Parameters | | | I | | | +===========+====+========+============================================+ | Upload | sb | upload | store_path: str, dataset_files: | | Submissio | m | _submi | Sequence[str], doc_files: Sequence[str], | | n | up | ssion | path: str, submission_id: str, | | | lo | | publication_date: str, allow_publication: | | | ad | | bool | +-----------+----+--------+--------------------------------------------+ | Download | ds | downlo | ids: List[str], download_docs: bool, | | datasets | do | ad_dat | out_fn: Optional[str] | | by Ids | wn | asets_ | | | | lo | by_ids | | | | ad | | | +-----------+----+--------+--------------------------------------------+ | Delete | ds | delete | submission_id: str | | datasets | de | _datas | | | by | l- | ets_by | | | submissio | by | _submi | | | n | -s | ssion | | | | b | | | +-----------+----+--------+--------------------------------------------+ | Get | ds | get_da | submission_id: str | | datasets | ge | tasets | | | by | t- | _by_su | | | submissio | by | bmissi | | | n | -s | on | | | | b | | | +-----------+----+--------+--------------------------------------------+ | Get a | ds | get_da | dataset_id: str, fmt: str | | single | ge | taset | | | dataset | t | | | | by ID | | | | +-----------+----+--------+--------------------------------------------+ | Find | ds | find_d | | | datasets | fi | ataset | | | | nd | s | | +-----------+----+--------+--------------------------------------------+ | Get | sb | get_su | submission_id: str | | submissio | m | bmissi | | | n | ge | on | | | by ID | t | | | +-----------+----+--------+--------------------------------------------+ | Get | sb | get_su | user_id: str | | submissio | m | bmissi | | | ns | us | ons_fo | | | for user | er | r_user | | +-----------+----+--------+--------------------------------------------+ | Update | sb | update | submission_id: str, status: str | | status of | m | _submi | | | a | st | ssion_ | | | submissio | at | status | | | n | us | | | +-----------+----+--------+--------------------------------------------+ | Delete an | sb | delete | submission_id: str | | entire | m | _submi | | | submissio | de | ssion | | | n | le | | | | | te | | | +-----------+----+--------+--------------------------------------------+","title":"API"},{"location":"ocdb-api-cli/#the-ocdb-command-line-client-and-python-api","text":"Automation and easy access is important. The OCDB database system does, therefore, offer a python command line interface as well as a Python API to access as well as manage submissions and users.","title":"The OCDB Command Line Client and Python API"},{"location":"ocdb-api-cli/#installation","text":"To install the CLI and API, please use following steps. git clone https://github.com/bcdev/ocdb-client cd ocdb-client conda env create [conda] activate ocdb-client python setup.py install","title":"Installation"},{"location":"ocdb-api-cli/#configure","text":"In order to access the database you need to configure the REST API server address. The default address is https://ocdb.eumetsat.int . cli: ocdb-cli conf https://ocdb.eumetsat.int ocdb-cli cond server_url [some url] python: from ocdb_client.api.OCDBApi import new_api api = new_api() api.config #Out[11]: {'server_url': 'https://ocdb.eumetsat.int'} api.set(server_url=\"[some server url]\")","title":"Configure"},{"location":"ocdb-api-cli/#search-database","text":"The database can be searched using the so-called Lucene syntax (https://lucene.apache.org/core/2_9_4/queryparsersyntax.html). The Lucene syntax allows you to query specific fields and also allows to apply logic, chaining of queries, and using wild cards. The first example below for instance attempts to find data files that include the name \"Colleen\" in the investigators meta field. bash: ocdb-cli ds find --expr \"investigators: *Colleen*\" { \"locations\": {}, \"total_count\": 900, \"datasets\": [ { \"id\": \"5c6d632661d82d28bf8ce807\", \"path\": \"URI/Mouw/NIH-NSF_Lake_Erie/URI_Lake_Erie_2013/archive/URI_Lake_Erie20130820_2_0m_ag.txt\" }, ... python: api.find_datasets(expression=\"investigators:*Colleen*\") { \"locations\": {}, \"total_count\": 900, \"datasets\": [ { \"id\": \"5c6d632661d82d28bf8ce807\", \"path\": \"URI/Mouw/NIH-NSF_Lake_Erie/URI_Lake_Erie_2013/archive/URI_Lake_Erie20130820_2_0m_ag.txt\" }, ... Possible fields are : path : received : Date received identifier_product_doi : Product DOI investigators : Primary Investigators (PIs) of the experiment affiliations : The affiliations of the PIs. contact : Contact (email address) of the PIs. experiment : Identifier of the experiment cruise : Identifier of the cruise data_file_name : The name of the original data file data_type : The data type (e.g. scan) documents : Comma separated list of uploaded supplementary documents data_status : e.g. final start_date : Start of measurements, end_date : End of measurements water_depth : Water depths during measurement measurement_depth : Measurement depth secchi_depth : Secchi depth missing : Fill value delimiter : Delimiter of data file e.g. tab units : Comma separated list of units e.g. \"nm,1/m,1/m\"","title":"Search Database"},{"location":"ocdb-api-cli/#get-datasets","text":"The search engine returns a list of datasets. In order to retrieve the actual data you, you will have to use the result and obtain dataset IDs. A dataset ID can be used to get actual data: python: api.get_dataset(dataset_id='5c6d632661d82d28bf8ce807', fmt='pandas') Out[10]: wavelength ag ag_sd 0 300 6.1015 0.2407 1 301 5.9565 0.2389 2 302 5.8140 0.2352 3 303 5.6763 0.2318 ...","title":"Get Datasets"},{"location":"ocdb-api-cli/#user-management","text":"Login User : The login procedure will ask for a user name and password. You can specify the password as an option. However, under normal circumstances we advice to use the command line prompt. The example below will login a user with the user name 'admin'. 'admin' is a dummy user that should be present in the Copernicus production database. Scott does not have any privileges. cli: ocdb-cli user login --user scott --password tiger python: api.login_user(username='scott', password='tiger') Add User : To add a user, specify the required user information cli: ocdb-cli user add -u admin -p admin -fn Submit -ln Submit -em jj -ph hh -r admin python: api.add_user(username='<user_name>', password='<passwd>', roles=['<role1>, <role2>']) You need to have administrative access rights to be able to complete this action. Get User Information : cli: ocdb-cli user get --user scott python: api.get_user(name=<user_name>) You need to have administrative access rights to perform this operation for any user. Users can request their own information without restrictions. Delete a User : cli: ocdb-cli user delete --user scott python: api.delete_user(name=<user_name>) You need to have administrative access rights to be able to complete this action Update an Existing User : cli: ocdb-cli user update --key last_name --value <your value> python: api.update_user(name=<user_name>, key=<key>, value=<value>) You need to have administrative access rights to perform this operation for any user. Users can update their own information without restrictions.","title":"User Management"},{"location":"ocdb-api-cli/#managing-submissions","text":"Get Submission : cli: ocdb-cli sbm get --submission-id <submission-id> python: api.get_submission(<submission-id>) You need to have administrative access rights to perform this operation for any submission. Users can monitor their own submissions without restrictions. Get Submissions for a specific User : cli: ocdb-cli sbm user --user-id <user-id> python: api.get_submissions_for_user(<user-id>) You need to have administrative access rights to perform this operation for any submission. Users can monitor their own submissions without restrictions. Delete Submission : cli: ocdb-cli sbm delete --submission-id <submission-id> python: api.delete_submission(<submission-id>) You need to have administrative access rights to perform this operation for any submission. Users can delete their own submissions without restrictions. Update Submission Status : This command allows to manipulate the status of a submission. Some status changes will have impact on whether the data are searchable or not. The following list shows the different stati and the impact on the accessibility when changing them: SUBMITTED: A dataset has been submitted. Usually also means that the data has issues. This will trigger the automated validation process VALIDATED: The data has been submitted and is clean PROCESSED: The data has been processed into the database and is findable, but only to admins and the submitting user PUBLISHED: The data has been processed into the database and is publicly available CANCELED: The data submission has been canceled. Setting this status will remove the data from the database and will not be findable anymore PAUSED: The user pauses the submission. This indicates that the admin shall not publish or process the data cli: ocdb-cli sbm status --submission-id <submission-id> --status <status> python api.update_submission_status(<submission-id>, <status>) You need to have administrative access rights to perform this operation for any submission. Users can submit, cancel and pause their own submissions without restrictions. Download Submission File : This command will download a single submission file. Please be aware that the version of the file is that of the submission status. Do not use this feature to download data, instead use the \"dataset\" API. cli: ocdb-cli sbm download --submission-id <submission-id> --index <index> python api.download_submission_file(<submission-id>, <index>) Upload Submission File : The aim of this feature is to enable users and admin to replace an existing submission file. You can replace both documents and measurements. cli ocdb-cli sbm upload --submission-id <submission-id> --index <index> --file <file> python api.upload_submission_file(<submission-id>, <index>, <file>) You need to have administrative access rights to perform this operation for any submission file. Users can update their own submission files without restrictions.","title":"Managing Submissions"},{"location":"ocdb-api-cli/#general","text":"Get License ocdb-cli lic","title":"General"},{"location":"ocdb-api-cli/#list-of-functionscli-commands","text":"+-----------+----+--------+--------------------------------------------+ | Operation | CL | API | Parameters | | | I | | | +===========+====+========+============================================+ | Upload | sb | upload | store_path: str, dataset_files: | | Submissio | m | _submi | Sequence[str], doc_files: Sequence[str], | | n | up | ssion | path: str, submission_id: str, | | | lo | | publication_date: str, allow_publication: | | | ad | | bool | +-----------+----+--------+--------------------------------------------+ | Download | ds | downlo | ids: List[str], download_docs: bool, | | datasets | do | ad_dat | out_fn: Optional[str] | | by Ids | wn | asets_ | | | | lo | by_ids | | | | ad | | | +-----------+----+--------+--------------------------------------------+ | Delete | ds | delete | submission_id: str | | datasets | de | _datas | | | by | l- | ets_by | | | submissio | by | _submi | | | n | -s | ssion | | | | b | | | +-----------+----+--------+--------------------------------------------+ | Get | ds | get_da | submission_id: str | | datasets | ge | tasets | | | by | t- | _by_su | | | submissio | by | bmissi | | | n | -s | on | | | | b | | | +-----------+----+--------+--------------------------------------------+ | Get a | ds | get_da | dataset_id: str, fmt: str | | single | ge | taset | | | dataset | t | | | | by ID | | | | +-----------+----+--------+--------------------------------------------+ | Find | ds | find_d | | | datasets | fi | ataset | | | | nd | s | | +-----------+----+--------+--------------------------------------------+ | Get | sb | get_su | submission_id: str | | submissio | m | bmissi | | | n | ge | on | | | by ID | t | | | +-----------+----+--------+--------------------------------------------+ | Get | sb | get_su | user_id: str | | submissio | m | bmissi | | | ns | us | ons_fo | | | for user | er | r_user | | +-----------+----+--------+--------------------------------------------+ | Update | sb | update | submission_id: str, status: str | | status of | m | _submi | | | a | st | ssion_ | | | submissio | at | status | | | n | us | | | +-----------+----+--------+--------------------------------------------+ | Delete an | sb | delete | submission_id: str | | entire | m | _submi | | | submissio | de | ssion | | | n | le | | | | | te | | | +-----------+----+--------+--------------------------------------------+","title":"List of functions/CLI commands"},{"location":"ocdb-data-access-policy/","text":"OCDB Download Terms and Conditions The in-situ data are made available by the Copernicus Database of Ocean Colour In Situ Fiducial Reference Measurements. The data are contributed, on a voluntary basis, by different Principal Investigators (PIs) responsible for data collection and processing. The Database is maintained by EUMETSAT. Using data Please consult with the PIs via e-mail on the use of the data. PIs\u2019 names, affiliations, projects, and contacts are provided together with the data. Guidelines for data use and publication It is requested that every practical attempt is made to honour the following guidelines: Always acknowledge the data providers! The acknowledgement may read: We thank the PI(s) for their effort in collecting the data used in this investigation and for making them available. Publishing data from a 'few\u2019 selected projects, sites or cruises : Please consider co-authorship for the PI(s). If the in-situ data are a principal component of the publication : Offer co-authorship to the PI(s). If you accept the above conditions, please click the \"Accept\" button below to proceed downloading. If you do not agree with the above conditions, click \"Do Not Accept\" to return to the website. EUMETSAT will not be held responsible for any data errors or misuse.","title":"Data Access Policy"},{"location":"ocdb-data-access-policy/#ocdb-download-terms-and-conditions","text":"The in-situ data are made available by the Copernicus Database of Ocean Colour In Situ Fiducial Reference Measurements. The data are contributed, on a voluntary basis, by different Principal Investigators (PIs) responsible for data collection and processing. The Database is maintained by EUMETSAT.","title":"OCDB Download Terms and Conditions"},{"location":"ocdb-data-access-policy/#using-data","text":"Please consult with the PIs via e-mail on the use of the data. PIs\u2019 names, affiliations, projects, and contacts are provided together with the data.","title":"Using data"},{"location":"ocdb-data-access-policy/#guidelines-for-data-use-and-publication","text":"It is requested that every practical attempt is made to honour the following guidelines: Always acknowledge the data providers! The acknowledgement may read: We thank the PI(s) for their effort in collecting the data used in this investigation and for making them available. Publishing data from a 'few\u2019 selected projects, sites or cruises : Please consider co-authorship for the PI(s). If the in-situ data are a principal component of the publication : Offer co-authorship to the PI(s). If you accept the above conditions, please click the \"Accept\" button below to proceed downloading. If you do not agree with the above conditions, click \"Do Not Accept\" to return to the website. EUMETSAT will not be held responsible for any data errors or misuse.","title":"Guidelines for data use and publication"},{"location":"ocdb-examples/","text":"Examples CLI Python API","title":"Examples"},{"location":"ocdb-examples/#examples","text":"","title":"Examples"},{"location":"ocdb-examples/#cli","text":"","title":"CLI"},{"location":"ocdb-examples/#python-api","text":"","title":"Python API"},{"location":"ocdb-rest/","text":"Copernicus OCDB Restful API Definition OCDB Restful API","title":"Rest"},{"location":"ocdb-rest/#copernicus-ocdb-restful-api-definition","text":"OCDB Restful API","title":"Copernicus OCDB Restful API Definition"},{"location":"ocdb-search/","text":"Search the Database All data the submittors have agreed to publish is searchable for the public. The OCDB WebUI offers a graphical search interface. Main feature of this interface is the search text field. You can enter a single keyword which will attempt to find data using the meta data fields provided by the submittor. This field also allows to use the so-called Lucene syntax which enables you to search for specific field values and also allows chaining. A concise description of the full Lucene query language syntax can be found at https://lucene.apache.org/core/2_9_4/queryparsersyntax.html. Please note that the OCDB system does not support the complete syntax. Lucene Syntax [field]: [expression] Exact Match : investigators: Colleen Returns all datasets where the field \"investigators\" exactly matches the term \"Colleen\". Wild Card : investigators: *Colleen* investigators: ?Colleen? Lucene syntax offers two flavours of wildcards; the \"*\" represents multiple wildcard characters, the \"?\" denotes a single character wildcard. So the first example above returns all datasets with the investigators field containing \"Colleen\", surrounded by any number of characters, whereas the second returns datasets with \"Colleen\" preceded and followed by any single character. Operators AND/OR : investigators: *Colleen* AND investigators: Helge investigators: *Colleen* OR investigators: Helge These operators allow to combine conditions. As expected, the \"AND\" implements a logical AND, the \"OR\" represents the logical OR operation. Operators Lower/Greater Than : investigators: >Colleen investigators: <Colleen Allows to search for datasets where a field is greater that or smaller than a reference. For number fields the functionality is obvious. When applying the operator to String fields, alphanumerical comparisoins are used (i.e. C>B is TRUE). Groups The search interface allows to restrict result sets to certain geophysical variable types, the so-called \"groups\". A list of groups and the variables covered is listed in the table below: ============ ============================================================= Group Description ============ ============================================================= a Spectral absorption coefficients: a, ap, aph, ad, ag b Spectral scattering coefficients: b, bp bb Spectral backscattering coefficients: bb, bbp, beta (VSF) c Spectral attenuation coefficients: c, cg, cp, cpg DC Dissolved carbon: DIC, DOC, pCO2, alkalinity, CDOM PC Particulate carbon: PIC, POC SPM Suspended particulate matter AOT Aerosol optical properties: AOT, angstrom, water vapor, ozone nutrients Si, N, P, oxygen CTD Hydrography: Wt, Sal/Cond, sigmaT fluorescence Fluorescence productivity NPP, NCP, GPP, PP Chl Chlorophyll-a only HPLC HPLC: Phytoplankton pigments ============ =============================================================","title":"Search"},{"location":"ocdb-search/#search-the-database","text":"All data the submittors have agreed to publish is searchable for the public. The OCDB WebUI offers a graphical search interface. Main feature of this interface is the search text field. You can enter a single keyword which will attempt to find data using the meta data fields provided by the submittor. This field also allows to use the so-called Lucene syntax which enables you to search for specific field values and also allows chaining. A concise description of the full Lucene query language syntax can be found at https://lucene.apache.org/core/2_9_4/queryparsersyntax.html. Please note that the OCDB system does not support the complete syntax.","title":"Search the Database"},{"location":"ocdb-search/#lucene-syntax","text":"[field]: [expression] Exact Match : investigators: Colleen Returns all datasets where the field \"investigators\" exactly matches the term \"Colleen\". Wild Card : investigators: *Colleen* investigators: ?Colleen? Lucene syntax offers two flavours of wildcards; the \"*\" represents multiple wildcard characters, the \"?\" denotes a single character wildcard. So the first example above returns all datasets with the investigators field containing \"Colleen\", surrounded by any number of characters, whereas the second returns datasets with \"Colleen\" preceded and followed by any single character. Operators AND/OR : investigators: *Colleen* AND investigators: Helge investigators: *Colleen* OR investigators: Helge These operators allow to combine conditions. As expected, the \"AND\" implements a logical AND, the \"OR\" represents the logical OR operation. Operators Lower/Greater Than : investigators: >Colleen investigators: <Colleen Allows to search for datasets where a field is greater that or smaller than a reference. For number fields the functionality is obvious. When applying the operator to String fields, alphanumerical comparisoins are used (i.e. C>B is TRUE).","title":"Lucene Syntax"},{"location":"ocdb-search/#groups","text":"The search interface allows to restrict result sets to certain geophysical variable types, the so-called \"groups\". A list of groups and the variables covered is listed in the table below: ============ ============================================================= Group Description ============ ============================================================= a Spectral absorption coefficients: a, ap, aph, ad, ag b Spectral scattering coefficients: b, bp bb Spectral backscattering coefficients: bb, bbp, beta (VSF) c Spectral attenuation coefficients: c, cg, cp, cpg DC Dissolved carbon: DIC, DOC, pCO2, alkalinity, CDOM PC Particulate carbon: PIC, POC SPM Suspended particulate matter AOT Aerosol optical properties: AOT, angstrom, water vapor, ozone nutrients Si, N, P, oxygen CTD Hydrography: Wt, Sal/Cond, sigmaT fluorescence Fluorescence productivity NPP, NCP, GPP, PP Chl Chlorophyll-a only HPLC HPLC: Phytoplankton pigments ============ =============================================================","title":"Groups"},{"location":"ocdb-tech-deployment/","text":"Deployment WebUI The WEBUI uses the following technologies: React Typescript nodejs yarn leaflet To install a development version, you will need to install git, nodejs and yarn and execute the following steps that will install all dependencies and start a development server on port 3000: git clone https://github.com/bcdev/ocdb-webui.git cd ocdb-webui yarn install yarn start For installing a production version we encourage you to use our docker container. The container exposes port 3000. It is up to you to map it to a different port. docker run -p 3000:3000 quay.io/bcdev/eocdb-webui:latest We also provide a repository that allows to install the whole OCDB infrastructure including the backend server, Mongo DB, and this WEBUI. Running all services will require docker as well as docker-compose to be installed on your system. The build process will copy the WEBUI static files into the server image. 'up -d' will start two containers: One mongodb database server and the backend server which serves the RESTful service as well as the WEBUI site. git clone https://github.com/bcdev/ocdb-services cd ocdb-services docker-compose build docker-compose up -d The following example shows the running server on ocdb.eumetsat.int . As you can see the server exposes port 4000 but is mapped to 443. $ ./docker-compose ps Name Command State Ports ---------------------------------------------------------------------------------------------------- eocdb-services_eocdb-db_1 docker-entrypoint.sh mongod Up 27017/tcp eocdb-services_eocdb-server_1 /bin/bash -c source activa ... Up (healthy) 0.0.0.0:80->4000/tcp CLI/Python API","title":"Deployment"},{"location":"ocdb-tech-deployment/#deployment","text":"","title":"Deployment"},{"location":"ocdb-tech-deployment/#webui","text":"The WEBUI uses the following technologies: React Typescript nodejs yarn leaflet To install a development version, you will need to install git, nodejs and yarn and execute the following steps that will install all dependencies and start a development server on port 3000: git clone https://github.com/bcdev/ocdb-webui.git cd ocdb-webui yarn install yarn start For installing a production version we encourage you to use our docker container. The container exposes port 3000. It is up to you to map it to a different port. docker run -p 3000:3000 quay.io/bcdev/eocdb-webui:latest We also provide a repository that allows to install the whole OCDB infrastructure including the backend server, Mongo DB, and this WEBUI. Running all services will require docker as well as docker-compose to be installed on your system. The build process will copy the WEBUI static files into the server image. 'up -d' will start two containers: One mongodb database server and the backend server which serves the RESTful service as well as the WEBUI site. git clone https://github.com/bcdev/ocdb-services cd ocdb-services docker-compose build docker-compose up -d The following example shows the running server on ocdb.eumetsat.int . As you can see the server exposes port 4000 but is mapped to 443. $ ./docker-compose ps Name Command State Ports ---------------------------------------------------------------------------------------------------- eocdb-services_eocdb-db_1 docker-entrypoint.sh mongod Up 27017/tcp eocdb-services_eocdb-server_1 /bin/bash -c source activa ... Up (healthy) 0.0.0.0:80->4000/tcp","title":"WebUI"},{"location":"ocdb-tech-deployment/#clipython-api","text":"","title":"CLI/Python API"},{"location":"ocdb-tech-docs/","text":"Editing the Documentation Step 1: Get a GitHub Account Go to GitHub and create an account for yourself. In future you will be able to use your internal BitBucket infrastructure to do exactly the same. Step 2: Edit an md file Go to the OCDB docs and click on an md file. On the top right corner you find an edit button. Click it and an editor will open. The editor uses so-called markdown. Markdown documents are great for these kinds of documents but have two issues: images and tables. A brief on Markdown Markdown is a simple text file that is in this case translated into html. The translator needs information about formattings like paragraphs, headers, images etc. This is done by special characters. A hash (#) for instance tells the translator that a heading is following. The number of hashes you use notifies which level the heading is. To gie an example: # Header 1 ## Header2 - list item1 - list item2 - list item 2.1 Translates into: Header 1 Header2 list item1 list item2 list item 2.1 The easiest is to use this cheat sheet or its PDF version Code Markdown is very string when highlighting source code. Start a paragraph using three single quotes (OBS: on the German keyboard you have to use the upper apostroph key in the top row. That character ONLY appears if its followed by pushing the space key. Drove me crazy!) Example for python: import csv with open('test.csv', 'r') as csv_file: reader = csv.read(csv_file) Tables Unfortunately readthedocs.io cannot parse markdown tables. You will have to use rst tables instead. Use this tool for smaller tables: Table Editor . This tool will generate reStructured text which is very similar to markdown. Include the text like this: +---------+---------+---------+ | header1 | header2 | header3 | +=========+=========+=========+ | 1 | 1 | 1 | +---------+---------+---------+ | 2 | 2 | 2 | +---------+---------+---------+ | 3 | 3 | 3 | +---------+---------+---------+ For larger tables you can import a csv file like this: .. csv-table:: The contents of :widths: 15 40 20 :header-rows: 1 :file: ocdb_fields.csv eval_rst translates the reStructured text to markdown for you. Images and Links Unfortunately there is no way to copy and paste images. You need to upload the first. Uploading files will be described in the following chapter. Including an image ![submission](static/webui/submission_dialog.png) Results in: Uploading Files On the GitHub repository site, browse to the directory the file shall reside in e.g.: https://github.com/bcdev/ocdb-webui/tree/master/docs/source/static/webui Click on 'Upload files' in the rop right corner. Drag and drop you file(s) into the dialog. Add some documentation about the purpose of the file and click 'Commit Changes'. If you use this file in the documentation please be aware that you have to refer to it from the docs/source directory as that is where the documentation will be compiled when pushing to readthedocs.io. The file submission_dialog.png for instance resides in docs/source/static/webui but will refered to as: ![submission](static/webui/submission_dialog.png)","title":"Tech Docs"},{"location":"ocdb-tech-docs/#editing-the-documentation","text":"","title":"Editing the Documentation"},{"location":"ocdb-tech-docs/#step-1-get-a-github-account","text":"Go to GitHub and create an account for yourself. In future you will be able to use your internal BitBucket infrastructure to do exactly the same.","title":"Step 1: Get a GitHub Account"},{"location":"ocdb-tech-docs/#step-2-edit-an-md-file","text":"Go to the OCDB docs and click on an md file. On the top right corner you find an edit button. Click it and an editor will open. The editor uses so-called markdown. Markdown documents are great for these kinds of documents but have two issues: images and tables.","title":"Step 2: Edit an md file"},{"location":"ocdb-tech-docs/#a-brief-on-markdown","text":"Markdown is a simple text file that is in this case translated into html. The translator needs information about formattings like paragraphs, headers, images etc. This is done by special characters. A hash (#) for instance tells the translator that a heading is following. The number of hashes you use notifies which level the heading is. To gie an example: # Header 1 ## Header2 - list item1 - list item2 - list item 2.1 Translates into:","title":"A brief on Markdown"},{"location":"ocdb-tech-docs/#header-1","text":"","title":"Header 1"},{"location":"ocdb-tech-docs/#header2","text":"list item1 list item2 list item 2.1 The easiest is to use this cheat sheet or its PDF version","title":"Header2"},{"location":"ocdb-tech-docs/#code","text":"Markdown is very string when highlighting source code. Start a paragraph using three single quotes (OBS: on the German keyboard you have to use the upper apostroph key in the top row. That character ONLY appears if its followed by pushing the space key. Drove me crazy!) Example for python: import csv with open('test.csv', 'r') as csv_file: reader = csv.read(csv_file)","title":"Code"},{"location":"ocdb-tech-docs/#tables","text":"Unfortunately readthedocs.io cannot parse markdown tables. You will have to use rst tables instead. Use this tool for smaller tables: Table Editor . This tool will generate reStructured text which is very similar to markdown. Include the text like this: +---------+---------+---------+ | header1 | header2 | header3 | +=========+=========+=========+ | 1 | 1 | 1 | +---------+---------+---------+ | 2 | 2 | 2 | +---------+---------+---------+ | 3 | 3 | 3 | +---------+---------+---------+ For larger tables you can import a csv file like this: .. csv-table:: The contents of :widths: 15 40 20 :header-rows: 1 :file: ocdb_fields.csv eval_rst translates the reStructured text to markdown for you.","title":"Tables"},{"location":"ocdb-tech-docs/#images-and-links","text":"Unfortunately there is no way to copy and paste images. You need to upload the first. Uploading files will be described in the following chapter. Including an image ![submission](static/webui/submission_dialog.png) Results in:","title":"Images and Links"},{"location":"ocdb-tech-docs/#uploading-files","text":"On the GitHub repository site, browse to the directory the file shall reside in e.g.: https://github.com/bcdev/ocdb-webui/tree/master/docs/source/static/webui Click on 'Upload files' in the rop right corner. Drag and drop you file(s) into the dialog. Add some documentation about the purpose of the file and click 'Commit Changes'. If you use this file in the documentation please be aware that you have to refer to it from the docs/source directory as that is where the documentation will be compiled when pushing to readthedocs.io. The file submission_dialog.png for instance resides in docs/source/static/webui but will refered to as: ![submission](static/webui/submission_dialog.png)","title":"Uploading Files"},{"location":"ocdb-validation-config/","text":"Validation configuration Every in-situ measurement document entering the OCDB system is validated against a list of rules before being accepted by the system. The validation rules can be freely configured using the configuration file \"validation_config.json\" The validation system checks both header fields and measurement records using \"Rules\". Each rule relates to a section in the configuration file. Also, error and warning messages can be freely configured and associated to the rules. The configuration file contains four major sections: { \"header\": [], \"record\": [], \"errors\": [], \"warnings\": [] } which are explained in detail in the following sections. Header This section in the configuration contains all checks to be executed on the measurement header entries. All checks need to be of one of the following rule types. field_required Checks if a required field is present in the header information and that the field is not empty. A miss of this rule always results in an error. Parameters are: name : denotes the name of the field. The name tag omits the forward slash and just contains the name type : always \"field_required\" error : the error message to be displayed, either direct or as a reference (see below). Error messages can contain the tags {reference} : resolves to the field name. Example: { \"name\": \"investigators\", \"type\": \"field_required\", \"error\": \"@required_field_missing\" } field_optional Checks if an optional field is potentially present and if so that it is not empty. Issues a warning if field is empty. Parameters are: name : denotes the name of the field. The name tag omits the forward slash and just contains the name type : always \"field_optional\" warning : the warning message to be displayed, either direct or as a reference (see below). Warning messages can contain the tags {reference} : resolves to the field name. Example: { \"name\": \"station\", \"type\": \"field_optional\", \"warning\": \"@field_value_missing\" } field_obsolete Check if an obsolete header field is present in the header. If so, a warning message is issued. Parameters are: name : denotes the name of the field. The name tag omits the forward slash and just contains the name type : always \"field_obsolete\" warning : the warning message to be displayed, either direct or as a reference (see below). Warning messages can contain the tags {reference} : resolves to the field name. Example: { \"name\": \"station_alt_id\", \"type\": \"field_obsolete\", \"warning\": \"@obsolete_field\" } field_compare Check that the values of header fields follow relational rules (e.g. stop day not before start day). Parameters are: reference_name : denotes the name of the reference field. The name tag omits the forward slash and just contains the name compare_name : denotes the name of the comparand field. The name tag omits the forward slash and just contains the name type : always \"field_compare\" operation : one of the relational operators >=: greater than or equal >: greater than !=: not equal ==: equal \\<: lesser than \\<=: lesser than or equal data_type : data type of the field value. Must be one of: date: a date value formatted \"YYYYmmdd\" number: a numerical value string: a string value error : the error message to be displayed, either direct or as a reference (see below). Error messages can contain the tags {reference} : resolves to the reference field name. {ref_val} : resolves to the value of the reference field. {compare} : resolves to the comparand field name. {comp_val} : resolves to the value of the comparand field. warning : the warning message to be displayed, either direct or as a reference (see below). Warning messages are overridden if error is present. Warning messages can contain the tags {reference} : resolves to the reference field name. {ref_val} : resolves to the value of the reference field. {compare} : resolves to the comparand field name. {comp_val} : resolves to the value of the comparand field. Example: { \"type\": \"field_compare\", \"reference\": \"start_date\", \"compare\": \"end_date\", \"operation\": \"<=\", \"data_type\": \"date\", \"error\": \"@header_start_after_finish\" } Records Checks on the record section cover two entities: the correct unit(s) correct value ranges The list of variable names to validate is derived from the header field \"fields\" that defines the columns of the record section. A variable name can optionally be followed by any number of digits to e.g. denote the wavelength at which the measurement was taken. The name in the configuraiton file must be the raw name, without the numbers; these are automatically stripped for the validation chores. The units for a variable are defined in the header section \"units\" as a comma separated list of unit names. Each test can be configured to check for more than one valid physical unit (e.g. mg/m^3 or ug/l). After these global checks have successfully been passed, all values as stored in the records section are optionally checked to stay in the defined value ranges for the variable. These checks are fill-value-aware in the sense that possible fill values as defined in the header section \"missing\" are treated as check-passed. The check of the record content supports the following data types: Number record Checks a numerical measurement variable. Parameters are: data_type : always \"number\" name : the name of the variable without the optionally appended wavelength unit : the list of physical units as comma separated values. Set to \"none\" or \"unitless\" if the variable is dimensionless. lower_bound : lower numerical bound for the variable values. Skip field if no lower bound is to be applied. upper_bound : upper numerical bound for the variable values. Skip field if no upper bound is to be applied. unit_error : the error message to be displayed on an error related to the physical units, either direct or as a reference (see below). Unit error messages can contain the tags {field_name} : resolves to the variable name. {unit} : resolves to the required unit(s). {bad_unit} : resolves to the unit detected as incorrect. value_error : the error message to be displayed on an error related to the variable values, either direct or as a reference (see below). Value error messages can contain the tags {field_name} : resolves to the variable name. {line} : resolves to the record line number where the error was detected. {value} : resolves to the erroneous value. {lower_bound} : resolves to the lower numerical bound (if defined). {upper_bound} : resolves to the upper numerical bound (if defined). Example: { \"name\": \"adg\", \"unit\": \"1/m\", \"lower_bound\": 0, \"data_type\": \"number\", \"value_error\": \"@field_out_of_bounds\", \"unit_error\": \"@field_has_wrong_unit\" } Date record Checks a measurement variable containing a date value, formatted as \"YYYYMMDD\". Checks that the date format is correct, month and day values are within the standard boundaries and that the date is after the min_date defined. Parameters are: data_type : always \"date\" name : the name of the variable min_year : The lower bound of dates accepted as minimal year. Example: { \"name\": \"date_processed\", \"min_year\": 1975, \"data_type\": \"date\" } Time record Checks a measurement variable defining a timestamp, formatted as \"hh:mm:ss\". Checks that the time format is correct and the values for hours, minutes and seconds are within their ranges. Parameters are: data_type : always \"time\" name : the name of the variable unit : the list of physical units as comma separated values. Set to \"none\" or \"unitless\" if the variable is dimensionless. unit_error : the error message to be displayed on an error related to the physical units, either direct or as a reference (see below). Unit error messages can contain the tags {field_name} : resolves to the variable name. {unit} : resolves to the required unit(s). {bad_unit} : resolves to the unit detected as incorrect. Example: { \"name\": \"time_processed\", \"unit\": \"hh:mm:ss\", \"data_type\": \"time\", \"unit_error\": \"@field_has_wrong_unit\" } String record Checks a measurement variable containing a string value. Checks that the string value is not empty. Parameters are: data_type : always \"string\" name : the name of the variable error : the error message to be displayed, either direct or as a reference (see below). Error messages can contain the tags {field_name} : resolves to the variable name. {line} : resolves to the record line number where the error was detected. Example: { \"name\": \"hplc_gsfc_id\", \"data_type\": \"string\", \"error\": \"@field_is_empty\" } Errors and Warnings The OCDB validation system allows to customize most of the error and warning messages. Messages can be either literal messages (i.e. these are displayed \"as is\" ) or can refer to a predefined message using the \"@\" character. Example: { \"name\": \"adg\", \"unit\": \"1/m\", \"lower_bound\": 0, \"data_type\": \"number\", \"value_error\": \"@field_out_of_bounds\", \"unit_error\": \"This field has a faulty unit\" } The \"value_error\" is referring to a message template while the \"unit_error\" is using a literal error message. The predefined messages are stored in the sections \"errors\" and \"warnings\" of the configuration file. A message is defined by a message name and the message text. Validation rules always refer to the name using the pattern \"@name\". Example: \"errors\": [ { \"name\": \"south_north_mismatch\", \"message\": \"South_latitude is larger than north_latitude\" } ] The versatility of this message-system is supported by the possibility to use tags in the message templates. A tag is added to a message by writing the tag name in curly braces. Example: { \"name\": \"field_has_wrong_unit\", \"message\": \"The units of '{field_name}', should be '{unit}', not '{bad_unit}'.\" } The possible tags for each validation rule is listed above in the descriptions of the rule parameters.","title":"Validation Config"},{"location":"ocdb-validation-config/#validation-configuration","text":"Every in-situ measurement document entering the OCDB system is validated against a list of rules before being accepted by the system. The validation rules can be freely configured using the configuration file \"validation_config.json\" The validation system checks both header fields and measurement records using \"Rules\". Each rule relates to a section in the configuration file. Also, error and warning messages can be freely configured and associated to the rules. The configuration file contains four major sections: { \"header\": [], \"record\": [], \"errors\": [], \"warnings\": [] } which are explained in detail in the following sections.","title":"Validation configuration"},{"location":"ocdb-validation-config/#header","text":"This section in the configuration contains all checks to be executed on the measurement header entries. All checks need to be of one of the following rule types.","title":"Header"},{"location":"ocdb-validation-config/#field_required","text":"Checks if a required field is present in the header information and that the field is not empty. A miss of this rule always results in an error. Parameters are: name : denotes the name of the field. The name tag omits the forward slash and just contains the name type : always \"field_required\" error : the error message to be displayed, either direct or as a reference (see below). Error messages can contain the tags {reference} : resolves to the field name. Example: { \"name\": \"investigators\", \"type\": \"field_required\", \"error\": \"@required_field_missing\" }","title":"field_required"},{"location":"ocdb-validation-config/#field_optional","text":"Checks if an optional field is potentially present and if so that it is not empty. Issues a warning if field is empty. Parameters are: name : denotes the name of the field. The name tag omits the forward slash and just contains the name type : always \"field_optional\" warning : the warning message to be displayed, either direct or as a reference (see below). Warning messages can contain the tags {reference} : resolves to the field name. Example: { \"name\": \"station\", \"type\": \"field_optional\", \"warning\": \"@field_value_missing\" }","title":"field_optional"},{"location":"ocdb-validation-config/#field_obsolete","text":"Check if an obsolete header field is present in the header. If so, a warning message is issued. Parameters are: name : denotes the name of the field. The name tag omits the forward slash and just contains the name type : always \"field_obsolete\" warning : the warning message to be displayed, either direct or as a reference (see below). Warning messages can contain the tags {reference} : resolves to the field name. Example: { \"name\": \"station_alt_id\", \"type\": \"field_obsolete\", \"warning\": \"@obsolete_field\" }","title":"field_obsolete"},{"location":"ocdb-validation-config/#field_compare","text":"Check that the values of header fields follow relational rules (e.g. stop day not before start day). Parameters are: reference_name : denotes the name of the reference field. The name tag omits the forward slash and just contains the name compare_name : denotes the name of the comparand field. The name tag omits the forward slash and just contains the name type : always \"field_compare\" operation : one of the relational operators >=: greater than or equal >: greater than !=: not equal ==: equal \\<: lesser than \\<=: lesser than or equal data_type : data type of the field value. Must be one of: date: a date value formatted \"YYYYmmdd\" number: a numerical value string: a string value error : the error message to be displayed, either direct or as a reference (see below). Error messages can contain the tags {reference} : resolves to the reference field name. {ref_val} : resolves to the value of the reference field. {compare} : resolves to the comparand field name. {comp_val} : resolves to the value of the comparand field. warning : the warning message to be displayed, either direct or as a reference (see below). Warning messages are overridden if error is present. Warning messages can contain the tags {reference} : resolves to the reference field name. {ref_val} : resolves to the value of the reference field. {compare} : resolves to the comparand field name. {comp_val} : resolves to the value of the comparand field. Example: { \"type\": \"field_compare\", \"reference\": \"start_date\", \"compare\": \"end_date\", \"operation\": \"<=\", \"data_type\": \"date\", \"error\": \"@header_start_after_finish\" }","title":"field_compare"},{"location":"ocdb-validation-config/#records","text":"Checks on the record section cover two entities: the correct unit(s) correct value ranges The list of variable names to validate is derived from the header field \"fields\" that defines the columns of the record section. A variable name can optionally be followed by any number of digits to e.g. denote the wavelength at which the measurement was taken. The name in the configuraiton file must be the raw name, without the numbers; these are automatically stripped for the validation chores. The units for a variable are defined in the header section \"units\" as a comma separated list of unit names. Each test can be configured to check for more than one valid physical unit (e.g. mg/m^3 or ug/l). After these global checks have successfully been passed, all values as stored in the records section are optionally checked to stay in the defined value ranges for the variable. These checks are fill-value-aware in the sense that possible fill values as defined in the header section \"missing\" are treated as check-passed. The check of the record content supports the following data types:","title":"Records"},{"location":"ocdb-validation-config/#number-record","text":"Checks a numerical measurement variable. Parameters are: data_type : always \"number\" name : the name of the variable without the optionally appended wavelength unit : the list of physical units as comma separated values. Set to \"none\" or \"unitless\" if the variable is dimensionless. lower_bound : lower numerical bound for the variable values. Skip field if no lower bound is to be applied. upper_bound : upper numerical bound for the variable values. Skip field if no upper bound is to be applied. unit_error : the error message to be displayed on an error related to the physical units, either direct or as a reference (see below). Unit error messages can contain the tags {field_name} : resolves to the variable name. {unit} : resolves to the required unit(s). {bad_unit} : resolves to the unit detected as incorrect. value_error : the error message to be displayed on an error related to the variable values, either direct or as a reference (see below). Value error messages can contain the tags {field_name} : resolves to the variable name. {line} : resolves to the record line number where the error was detected. {value} : resolves to the erroneous value. {lower_bound} : resolves to the lower numerical bound (if defined). {upper_bound} : resolves to the upper numerical bound (if defined). Example: { \"name\": \"adg\", \"unit\": \"1/m\", \"lower_bound\": 0, \"data_type\": \"number\", \"value_error\": \"@field_out_of_bounds\", \"unit_error\": \"@field_has_wrong_unit\" }","title":"Number record"},{"location":"ocdb-validation-config/#date-record","text":"Checks a measurement variable containing a date value, formatted as \"YYYYMMDD\". Checks that the date format is correct, month and day values are within the standard boundaries and that the date is after the min_date defined. Parameters are: data_type : always \"date\" name : the name of the variable min_year : The lower bound of dates accepted as minimal year. Example: { \"name\": \"date_processed\", \"min_year\": 1975, \"data_type\": \"date\" }","title":"Date record"},{"location":"ocdb-validation-config/#time-record","text":"Checks a measurement variable defining a timestamp, formatted as \"hh:mm:ss\". Checks that the time format is correct and the values for hours, minutes and seconds are within their ranges. Parameters are: data_type : always \"time\" name : the name of the variable unit : the list of physical units as comma separated values. Set to \"none\" or \"unitless\" if the variable is dimensionless. unit_error : the error message to be displayed on an error related to the physical units, either direct or as a reference (see below). Unit error messages can contain the tags {field_name} : resolves to the variable name. {unit} : resolves to the required unit(s). {bad_unit} : resolves to the unit detected as incorrect. Example: { \"name\": \"time_processed\", \"unit\": \"hh:mm:ss\", \"data_type\": \"time\", \"unit_error\": \"@field_has_wrong_unit\" }","title":"Time record"},{"location":"ocdb-validation-config/#string-record","text":"Checks a measurement variable containing a string value. Checks that the string value is not empty. Parameters are: data_type : always \"string\" name : the name of the variable error : the error message to be displayed, either direct or as a reference (see below). Error messages can contain the tags {field_name} : resolves to the variable name. {line} : resolves to the record line number where the error was detected. Example: { \"name\": \"hplc_gsfc_id\", \"data_type\": \"string\", \"error\": \"@field_is_empty\" }","title":"String record"},{"location":"ocdb-validation-config/#errors-and-warnings","text":"The OCDB validation system allows to customize most of the error and warning messages. Messages can be either literal messages (i.e. these are displayed \"as is\" ) or can refer to a predefined message using the \"@\" character. Example: { \"name\": \"adg\", \"unit\": \"1/m\", \"lower_bound\": 0, \"data_type\": \"number\", \"value_error\": \"@field_out_of_bounds\", \"unit_error\": \"This field has a faulty unit\" } The \"value_error\" is referring to a message template while the \"unit_error\" is using a literal error message. The predefined messages are stored in the sections \"errors\" and \"warnings\" of the configuration file. A message is defined by a message name and the message text. Validation rules always refer to the name using the pattern \"@name\". Example: \"errors\": [ { \"name\": \"south_north_mismatch\", \"message\": \"South_latitude is larger than north_latitude\" } ] The versatility of this message-system is supported by the possibility to use tags in the message templates. A tag is added to a message by writing the tag name in curly braces. Example: { \"name\": \"field_has_wrong_unit\", \"message\": \"The units of '{field_name}', should be '{unit}', not '{bad_unit}'.\" } The possible tags for each validation rule is listed above in the descriptions of the rule parameters.","title":"Errors and Warnings"},{"location":"ocdb-validation-rules/","text":"OCDB Data Import Validation Rules The OCDB database system applies data validation rules during data submission. Teh aim is to ensure inter-operability. Please refer to for more information about the structure of these rules. This chapter will list the current rules. Header The header rules essentially check the existence of a header field . If a header field is required and not present in the data submitted, an error is reported. An optional field raises an error only if the field does not contain data. The existence of an obsolete field in the data will raise a warning in the data validation report. Required fields investigators : The contributors of the data file. Principal investigator is listed first, followed by any associate investigators. affiliations : A list of affiliations (e.g. university, laboratory) for each investigator. contact : An email address for one of the investigators or point of contact for the data file. experiment : The name of the over-arching, long-term research project or funding program. cruise : The name of the specific cruise (or subset of the experiment) where the data in the file were collected. north_latitude : The farthest north data in the file were collected (in decimal degrees). This header field requires a [DEG] trailer. Latitudes south of the equator are negative. south_latitude : The farthest south data in the file were collected (in decimal degrees). This header fields requires a [DEG] trailer. Latitudes south of the equator are negative. east_longitude : The farthest east data in the file were collected (in decimal degrees). This header field requires a [DEG] trailer. Longitudes west of the Prime Meridian are negative. west_longitude : The farthest west data in the file were collected (in decimal degrees). This header fields requires a [DEG] trailer. Longitudes west of the Prime Meridian are negative. start_date : The earliest date data in the file were collected (in YYYYMMDD). end_date : The latest date data in the file were collected (in YYYYMMDD). start_time : The earliest time of day measurements were collected during the start_date in the file (in HH:MM:SS). Times are in Greenwich Mean Time. This header requires a [GMT] trailer. end_time : The latest time of day data data were collected during the end_date in the file (in HH:MM:SS). Times are in Greenwich Mean Time. This header requires a [GMT] trailer. data_file_name : The current name of the data file. documents : Refers to cruise reports, station logs, digital images, and other associated documentation that provide additional information about the experiment and cruise. Every OCDB submission must be accompanied by an instrumentation/calibration report that describes the instruments used, how they were calibrated and how data were collected and processed. Multiple documents must be supplied as comma-separated list. calibration_files : Refers to supplementary files containing coefficients and techniques used to calibrate the instruments used in data collection. data_type : Describes the general collection method for the data. Accepted values include: cast for vertical profiles (e.g. optical packages, CTD) flow_thru for continuous data (e.g. shipboard, underway flow through systems) above_water for above surface radiometry data (e.g. ASD, SIMBAD, Satlantic SAS) sunphoto for sunphotometry data (e.g. MicroTops, PREDE) mooring for moored and buoy data drifter for drifter and drogue data scan for discrete hyperspectral measurements lidar for lidar and other active remote-sensing measurements (e.g. MPL) pigment for laboratory measured pigment data (e.g. fluorometry, spectrophotometry, HPLC) bottle for other types of measurements from water samples collected at discrete depths (e.g. nutrients) diver for measurements made by a diver auv for measurements made by an autonomous underwater vehicle (auv) airborne for measurements made via an aircraft missing : Refers to the NULL value used as a numeric placeholder for any missing data in the data file. delimiter : Indicates how the columns of data are delimited. Accepted delimiters include tab , space , and comma . Only a single (1) delimiter is permitted per data file. fields : A list of the field names for each column of data included in the data file, separated by delimiter . Each entry describes the data in a single (1) column, and every column must have an entry. units : A list of the units for each column of data included in the data file, separated by delimiter . water_depth : The water (bottom) depth at the station where the data were collected (in meters). Set to missing if not known. Optional fields station : The name of the station or deployment where data in the file were obtained. data_status : The condition, or status, of the data file. The value preliminary is used when the data are new and the investigator intends to analyze the data further. The value update indicates the data are being resubmitted and informs users that an additional resubmission will occur in the future. The value final is used when the investigator has no intention of revisiting the data set. secchi_depth : The secchi depth at the station where the data were collected (in meters). cloud_percent : Percent cloud cover for the entire sky. For example: 0 indicates no clouds and 100 indicates completely overcast. wave_height : The wave height at the station where the data were collected (in meters). wind_speed : The wind speed at the station where the data were collected (in meters per second). Obsolete fields station_alt_id associated_archives associated_archive_types associated_files associated_file_types original_file_name parameters measurement_depth volfilt end_header@ received identifier_product_doi below_detection_limit above_detection_limit optical_depth_warning area null_correction biotic_setting biotic_class biotic_subclass biotic_group biotic_comm_unit_y geoform_tectonic_setting geoform_physiographic_setting geoform_origin geoform geoform_type substrate_origin substrate_class substrate_subclass substrate_group substrate_subgroup water_column_biogeochemical_feature water_column_hydroform_class water_column_hydroform water_column_hydroform_type water_column_layer water_column_salinity water_column_temperature chemical_formula mass_to_charge Records Each record is checked against the below rules. The majority of teh rules encompass checks on valid unit__s, __data type , and bounds if defined. name : a, unit : 1/m, data type : number, lower bound : 0 name : a*ph, unit : m^2/mg, data type : number, lower bound : -1e-05 name : a*srfa, unit : m^2/mg, data type : number name : aaer, unit : 1/m, data type : number, lower bound : 0 name : abs, unit : none, data type : number, lower bound : 0 name : abs_blank_ap, unit : none, data type : number, lower bound : 0 name : abs_blank_ad, unit : none, data type : number, lower bound : 0 name : abs_blank_ag, unit : none, data type : number, lower bound : 0 name : abs*, unit : m^2/mg, data type : number, lower bound : 0 name : abs_ad, unit : none, data type : number, lower bound : 0 name : abs_ag, unit : none, data type : number, lower bound : 0 name : abs_ap, unit : none, data type : number, lower bound : 0 name : abs_nacl, unit : none, data type : number, lower bound : 0 name : abundance, unit : none, data type : number, lower bound : 0 name : ad, unit : 1/m, data type : number, lower bound : 0 name : ad_unc, unit : 1/m, data type : number, lower bound : 0 name : adg, unit : 1/m, data type : number, lower bound : 0 name : ag, unit : 1/m, data type : number, lower bound : 0 name : agp, unit : 1/m, data type : number, lower bound : 0 name : asrfa, unit : 1/m, data type : number name : allo, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : alpha-beta-car, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : altitude, unit : m, data type : number, lower bound : 0 name : am, unit : none, data type : number, lower bound : 0 name : angstrom, unit : none, data type : number, lower bound : 0 name : anth, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : aot, unit : none, data type : number, lower bound : 0.005, upper bound : 2.0 name : amc, unit : umol, data type : number name : amc-leu, unit : umol/l/hr, data type : number name : ap, unit : 1/m, data type : number, lower bound : 0 name : ap_unc, unit : 1/m, data type : number, lower bound : 0 name : aph, unit : 1/m, data type : number, lower bound : 0 name : aph_unc, unit : 1/m, data type : number, lower bound : 0 name : asta, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : at, unit : degreesC, data type : number, lower bound : 0 name : aw, unit : 1/m, data type : number, lower bound : 0 name : b, unit : 1/m, data type : number, lower bound : 0 name : bb, unit : 1/m, data type : number, lower bound : 0 name : bbp, unit : 1/m, data type : number, lower bound : 0 name : bbp_bp, unit : none, data type : number, lower bound : 0 name : bbw, unit : 1/m, data type : number, lower bound : 0 name : bchl_a, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : bactp, unit : pmol/L/hr, data type : number, lower bound : 0 name : bact_abun, unit : cells/L, data type : number, lower bound : 0 name : beta-beta-car, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : beta-epi-car, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : beta-psi-car, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : bin_depth, unit : m, data type : number, lower bound : 0 name : bincount, unit : none, data type : number, lower bound : 0 name : bp, unit : 1/m, data type : number, lower bound : 0 name : bsi, unit : mmol/m^3, data type : number, lower bound : 0 name : but-fuco, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : bw, unit : 1/m, data type : number, lower bound : 0 name : c, unit : 1/m, data type : number, lower bound : 0 name : c2h3n_h, unit : ppbv, data type : number, lower bound : 0 name : c2h4o_h, unit : ppbv, data type : number, lower bound : 0 name : c2h6s_h, unit : ppbv, data type : number, lower bound : 0 name : c3h6o_h, unit : ppbv, data type : number, lower bound : 0 name : c5h8_h, unit : ppbv, data type : number, lower bound : 0 name : c6h6_h, unit : ppbv, data type : number, lower bound : 0 name : cantha, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : cdmf, unit : volts,ppb, data type : number, lower bound : 0 name : cdom, unit : mg/m^3,ug/l,ppb, data type : number, lower bound : 0 name : cg, unit : 1/m, data type : number, lower bound : 0 name : cgp, unit : 1/m, data type : number, lower bound : 0 name : ch4o_h, unit : ppbv, data type : number, lower bound : 0 name : ch4s_h, unit : ppbv, data type : number, lower bound : 0 name : chl, unit : mg/m^3,ug/l, data type : number, lower bound : 0, upper bound : 100 name : chl_ex, unit : mg/m^3,ug/l, data type : number, lower bound : 0, upper bound : 100 name : chl_a, unit : mg/m^3,ug/l, data type : number, lower bound : 0, upper bound : 100 name : chl_a_allom, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : chl_a_prime, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : chl_b, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : chl_c, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : chl_c1, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : chl_c1c2, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : chl_c2, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : chl_c3, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : chlide_a, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : chlide_b, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : cloud, unit : %, data type : number, lower bound : 0 name : cnw, unit : 1/m, data type : number, lower bound : 0 name : cond, unit : mmho/cm, data type : number, lower bound : 0 name : cp, unit : 1/m, data type : number, lower bound : 0 name : cp_gamma, unit : none, data type : number name : croco, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : cw, unit : 1/m, data type : number, lower bound : 0 name : cycle, unit : none, data type : number, lower bound : 0 name : day, unit : dd, data type : number, lower bound : 1 name : depth, unit : m,meters, data type : number, lower bound : 0 name : dewpoint, unit : degreesC, data type : number name : diadchr, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : diadino, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : diato, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : dic, unit : umol/kg, data type : number, lower bound : 0 name : dino, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : dmsa, unit : ppt, data type : number name : dmssw, unit : nmol/l, data type : number, lower bound : 0 name : dna, unit : mg/m^3, data type : number, lower bound : 0 name : doc, unit : umol/kg, data type : number, lower bound : 0 name : dp, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : dv_chl_a, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : dv_chl_b, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : echin, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : ed, unit : uW/cm^2/nm,uWcm-2nm-1, data type : number, lower bound : -0.001, upper bound : 250.0 name : edgnd, unit : volts, data type : number name : edpitch, unit : degrees, data type : number name : edroll, unit : degrees, data type : number name : elapsed_time, unit : seconds, data type : number, lower bound : 0 name : elw, unit : uW/cm^2, data type : number, lower bound : 0 name : epar, unit : uE/cm^2/s, data type : number, lower bound : 0 name : epi-epi-car, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : es, unit : uW/cm^2/nm,uWcm-2nm-1, data type : number, lower bound : -0.001, upper bound : 250.0 name : esgnd, unit : volts, data type : number name : esky, unit : uW/cm^2/nm,uWcm-2nm-1, data type : number name : espitch, unit : degrees, data type : number name : esroll, unit : degrees, data type : number name : esun, unit : uW/cm^2/nm,uWcm-2nm-1, data type : number name : esw, unit : uW/cm^2, data type : number name : et-8-carot, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : et-chlide_a, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : et-chlide_b, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : eu, unit : uW/cm^2/nm,uWcm-2nm-1, data type : number, lower bound : 0 name : eugnd, unit : volts, data type : number name : eupar, unit : uE/cm^2/s, data type : number, lower bound : 0 name : f0, unit : uW/cm^2/nm, data type : number, lower bound : 0 name : f-initial, unit : none, data type : number, lower bound : 0 name : fm, unit : none, data type : number, lower bound : 0 name : fv_fm, unit : none, data type : number, lower bound : 0 name : fuco, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : g, unit : d-1,1/d,d^-1, data type : number name : g_herb, unit : d-1,1/d,d^-1, data type : number name : gyro, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : heading, unit : degrees, data type : number, lower bound : 0, upper bound : 360.0 name : hex-fuco, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : hex-kfuco, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : hour, unit : hh, data type : number, lower bound : 0, upper bound : 23 name : it, unit : degreesC, data type : number, lower bound : 0 name : iso_c2h3n_h, unit : ppbv, data type : number, lower bound : 0 name : iso_c2h4o_h, unit : ppbv, data type : number, lower bound : 0 name : iso_c2h6s_h, unit : ppbv, data type : number, lower bound : 0 name : iso_c3h6o_h, unit : ppbv, data type : number, lower bound : 0 name : iso_ch4o_h, unit : ppbv, data type : number, lower bound : 0 name : jd, unit : jjj, data type : number, lower bound : 1, upper bound : 366 name : kd, unit : 1/m,m-1, data type : number, lower bound : 0 name : kl, unit : 1/m,m-1, data type : number, lower bound : 0 name : knf, unit : 1/m,m-1, data type : number, lower bound : 0 name : kpar, unit : 1/m,m-1, data type : number, lower bound : 0 name : ku, unit : 1/m,m-1, data type : number, lower bound : 0 name : lat, unit : degrees, data type : number, lower bound : -90.0, upper bound : 90.0 name : lightlevel, unit : %, data type : number name : lon, unit : degrees, data type : number, lower bound : -180.0, upper bound : 180.0 name : lsi, unit : mmol/m^3, data type : number, lower bound : 0 name : lsky, unit : uW/cm^2/nm,uWcm-2nm-1, data type : number, lower bound : 0 name : lt, unit : uW/cm^2/nm,uWcm-2nm-1, data type : number name : lu, unit : uW/cm^2/nm,uWcm-2nm-1, data type : number, lower bound : -0.001, upper bound : 5.0 name : lugnd, unit : volts, data type : number name : lut, unit : mg/m^3,ug/l, data type : number name : lw, unit : uW/cm^2/nm,uWcm-2nm-1, data type : number, lower bound : -0.001, upper bound : 5.0 name : lwn, unit : uW/cm^2/nm,uWcm-2nm-1, data type : number, lower bound : -0.001 name : lwnex, unit : uW/cm^2/nm,uWcm-2nm-1, data type : number, lower bound : -0.001 name : lyco, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : me-chlinde_a, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : me-chlinde_b, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : mg_dvp, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : minute, unit : mn, data type : number, lower bound : 0, upper bound : 60 name : monado, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : month, unit : mo, data type : number, lower bound : 1, upper bound : 12 name : mpf, unit : none, data type : number, lower bound : 0 name : muf, unit : umol, data type : number name : muf-but, unit : umol/l/hr, data type : number name : muf-glu, unit : umol/l/hr, data type : number name : muf-po4, unit : umol/l/hr, data type : number name : mv_chl_a, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : mv_chl_b, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : mz, unit : none, data type : number, lower bound : 0 name : n2_fix, unit : ug/m^3/d, data type : number, lower bound : 0 name : nadir, unit : degrees, data type : number name : nanoeukaryote_abun, unit : cell/l, data type : number name : nanoeukaryote_biovol, unit : m^3/l, data type : number name : nanoeukaryote_ug/l, unit : m^3/l, data type : number name : natf, unit : nE/m^2/sr/s, data type : number, lower bound : 0 name : neo, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : nccb, unit : nmol/m^2/hr, data type : number, lower bound : 0 name : ncpb, unit : nmol/m^2/hr, data type : number, lower bound : 0 name : nh4, unit : nmol/m^3, data type : number, lower bound : 0 name : no2, unit : nmol/m^3, data type : number, lower bound : 0 name : no2_no3, unit : nmol/m^3, data type : number, lower bound : 0 name : no3, unit : nmol/m^3, data type : number, lower bound : 0 name : npf, unit : none, data type : number, lower bound : 0 name : npp, unit : mg/m^3/d,ug/l/d, data type : number, lower bound : 0 name : nrb, unit : photoelectrons/usec/shot, data type : number, lower bound : 0 name : oxygen, unit : ml/L, data type : number, lower bound : 0 name : oxygen_saturation, unit : %, data type : number, lower bound : 0 name : oz, unit : dobson, data type : number, lower bound : 0 name : p-457, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : par, unit : uE/cm^2/s, data type : number, lower bound : 0 name : pc, unit : mg/m^3, data type : number, lower bound : 0 name : pco2, unit : uatm, data type : number, lower bound : 0 name : perid, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : pdrift, unit : mbar, data type : number, lower bound : 0 name : ph, unit : none, data type : number, lower bound : 0, upper bound : 14 name : phaeo, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : phide_a, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : phide_b, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : phide_c, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : phytin_a, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : phytin_b, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : phytin_c, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : phytyl-chl_c, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : phyto_carbon, unit : ug/l, data type : number, lower bound : 0 name : pic, unit : mol/m^3, data type : number, lower bound : 0 name : pim, unit : mg/l, data type : number name : picoeukaryote_abun, unit : cell/l, data type : number name : picoeukaryote_biovol, unit : m^3/l, data type : number name : picoeukaryote_carbon, unit : ug/l, data type : number name : pitch, unit : degrees, data type : number name : pn, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : po4, unit : nmol/m^3, data type : number, lower bound : 0 name : poc, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : pom, unit : mg/l, data type : number name : pon, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : pp, unit : mgC/mgchla/hr, data type : number, lower bound : 0 name : ppc, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : ppc_tcar, unit : none, data type : number, lower bound : 0 name : ppc_tpg, unit : none, data type : number, lower bound : 0 name : ppf, unit : none, data type : number, lower bound : 0 name : pras, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : pressure, unit : dbar, data type : number, lower bound : 0 name : pressure_atm, unit : mbar, data type : number, lower bound : 0 name : prochlorococcus_abun, unit : cell/l, data type : number name : prochlorococcus_biovol, unit : m^3/l, data type : number name : prochlorococcus_carbon, unit : ug/l, data type : number name : psc, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : psc_tcar, unit : none, data type : number, lower bound : 0 name : psd, unit : ul/l, data type : number, lower bound : 0 name : psp, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : psp_tpg, unit : none, data type : number, lower bound : 0 name : pulse_width, unit : seconds, data type : number, lower bound : 0 name : pvel, unit : m/s, data type : number, lower bound : 0 name : pyrophide_a, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : pyrophytin_a, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : pyrophytin_b, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : pyrophytin_c, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : q, unit : sr, data type : number, lower bound : 0 name : qc, unit : none, data type : number name : *_qc, unit : none, data type : number name : r, unit : none, data type : number, lower bound : 0 name : relabundance, unit : %, data type : number name : relaz, unit : degrees, data type : number name : rf, unit : uW/cm^2/nm/sr, data type : number, lower bound : 0 name : rl, unit : 1/sr, data type : number, lower bound : 0 name : roll, unit : degrees, data type : number name : rpi, unit : none, data type : number, lower bound : 0 name : rrs, unit : 1/sr,sr^-1, data type : number, lower bound : 0 name : rtilt, unit : degrees, data type : number name : s_ad, unit : Slope, data type : number, lower bound : 0 name : s_ag, unit : Slope, data type : number, lower bound : 0 name : sal, unit : PSU, data type : number, lower bound : 0 name : saz, unit : degrees, data type : number, lower bound : 0 name : sdy, unit : ddd, data type : number, lower bound : 0 name : second, unit : ss, data type : number, lower bound : 0, upper bound : 59 name : senz, unit : degrees, data type : number, lower bound : 0 name : sig, unit : mV, data type : number name : sigma_psii, unit : angstrom^2, data type : number, lower bound : 0 name : sigma_theta, unit : kg/m^3, data type : number, lower bound : 0 name : sigmat, unit : kg/m^3, data type : number, lower bound : 0 name : sio4, unit : mmol/m^3, data type : number, lower bound : 0 name : siphn, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : siphx, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : speed_f_w, unit : m/s, data type : number name : spm, unit : mg/L, data type : number, lower bound : 0 name : sst, unit : degreesC, data type : number name : stimf, unit : volts, data type : number, lower bound : 0 name : synechococcus_abun, unit : cell/l, data type : number name : synechococcus_biovol, unit : m^3/l, data type : number name : synechococcus_carbon, unit : ug/l, data type : number name : sz, unit : m, data type : number, lower bound : 0 name : sza, unit : degrees, data type : number, lower bound : 0 name : tacc, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : tacc_tchla, unit : none, data type : number, lower bound : 0 name : tcar, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : tchl, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : tchl_tcar, unit : none, data type : number, lower bound : 0 name : tchla_tpg, unit : none, data type : number, lower bound : 0 name : tdn, unit : mmol/m^3, data type : number, lower bound : 0 name : tdrift, unit : degreesC, data type : number, lower bound : 0 name : tilt, unit : degrees, data type : number name : time, unit : hh:mm:ss, data type : time name : time_processed, unit : hh:mm:ss, data type : time name : tot_chl_a, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : tot_chl_b, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : tot_chl_c, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : tpg, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : trans, unit : %, data type : number, lower bound : 0 name : turbidity, unit : NTU, data type : number name : u, unit : d-1,1/d,d^-1, data type : number name : u_ph, unit : d-1,1/d,d^-1, data type : number name : u_zoo, unit : d-1,1/d,d^-1, data type : number name : urea, unit : mmol/m^3, data type : number, lower bound : 0 name : vauch, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : velnorth, unit : m/s, data type : number name : veleast, unit : m/s, data type : number name : velup, unit : m/s, data type : number name : viola, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : vocair, unit : ppbv, data type : number, lower bound : 0 name : vocair, unit : ppbv, data type : number, lower bound : 0 name : volfilt, unit : L, data type : number, lower bound : 0 name : vsf, unit : 1/m/sr, data type : number, lower bound : 0 name : vsfg, unit : 1/m/sr, data type : number, lower bound : 0 name : vsfp, unit : 1/m/sr, data type : number, lower bound : 0 name : vsfw, unit : 1/m/sr, data type : number, lower bound : 0 name : vsf_angle, unit : degrees, data type : number, lower bound : 0 name : water_depth, unit : m, data type : number, lower bound : 0 name : waveht, unit : m, data type : number, lower bound : 0 name : wavelength, unit : nm, data type : number, lower bound : 0 name : wdir, unit : degrees, data type : number, lower bound : 0, upper bound : 360 name : wind, unit : m/s, data type : number, lower bound : 0 name : wt, unit : degreesC, data type : number, lower bound : -4, upper bound : 40 name : wvp, unit : cm, data type : number, lower bound : 0 name : year, unit : yyyy, data type : number, lower bound : 1975, upper bound : 2019 name : z_90, unit : m, data type : number, lower bound : 0 name : z_dcm, unit : m, data type : number, lower bound : 0 name : z_eu, unit : m, data type : number, lower bound : 0 name : z_mld, unit : m, data type : number, lower bound : 0 name : zea, unit : mg/m^3,ug/l, data type : number, lower bound : 0 Field suffixes .. csv-table:: field Suffixes :widths: 15 40 20 :header-rows: 1 :file: ocdb-suffixes.csv Field Modifiers .. csv-table:: The contents of :widths: 15 40 20 :header-rows: 1 :file: ocdb-modifiers.csv Fields .. csv-table:: The contents of :widths: 15 40 20 :header-rows: 1 :file: ocdb_fields.csv","title":"Validation Rules"},{"location":"ocdb-validation-rules/#ocdb-data-import-validation-rules","text":"The OCDB database system applies data validation rules during data submission. Teh aim is to ensure inter-operability. Please refer to for more information about the structure of these rules. This chapter will list the current rules.","title":"OCDB Data Import Validation Rules"},{"location":"ocdb-validation-rules/#header","text":"The header rules essentially check the existence of a header field . If a header field is required and not present in the data submitted, an error is reported. An optional field raises an error only if the field does not contain data. The existence of an obsolete field in the data will raise a warning in the data validation report.","title":"Header"},{"location":"ocdb-validation-rules/#required-fields","text":"investigators : The contributors of the data file. Principal investigator is listed first, followed by any associate investigators. affiliations : A list of affiliations (e.g. university, laboratory) for each investigator. contact : An email address for one of the investigators or point of contact for the data file. experiment : The name of the over-arching, long-term research project or funding program. cruise : The name of the specific cruise (or subset of the experiment) where the data in the file were collected. north_latitude : The farthest north data in the file were collected (in decimal degrees). This header field requires a [DEG] trailer. Latitudes south of the equator are negative. south_latitude : The farthest south data in the file were collected (in decimal degrees). This header fields requires a [DEG] trailer. Latitudes south of the equator are negative. east_longitude : The farthest east data in the file were collected (in decimal degrees). This header field requires a [DEG] trailer. Longitudes west of the Prime Meridian are negative. west_longitude : The farthest west data in the file were collected (in decimal degrees). This header fields requires a [DEG] trailer. Longitudes west of the Prime Meridian are negative. start_date : The earliest date data in the file were collected (in YYYYMMDD). end_date : The latest date data in the file were collected (in YYYYMMDD). start_time : The earliest time of day measurements were collected during the start_date in the file (in HH:MM:SS). Times are in Greenwich Mean Time. This header requires a [GMT] trailer. end_time : The latest time of day data data were collected during the end_date in the file (in HH:MM:SS). Times are in Greenwich Mean Time. This header requires a [GMT] trailer. data_file_name : The current name of the data file. documents : Refers to cruise reports, station logs, digital images, and other associated documentation that provide additional information about the experiment and cruise. Every OCDB submission must be accompanied by an instrumentation/calibration report that describes the instruments used, how they were calibrated and how data were collected and processed. Multiple documents must be supplied as comma-separated list. calibration_files : Refers to supplementary files containing coefficients and techniques used to calibrate the instruments used in data collection. data_type : Describes the general collection method for the data. Accepted values include: cast for vertical profiles (e.g. optical packages, CTD) flow_thru for continuous data (e.g. shipboard, underway flow through systems) above_water for above surface radiometry data (e.g. ASD, SIMBAD, Satlantic SAS) sunphoto for sunphotometry data (e.g. MicroTops, PREDE) mooring for moored and buoy data drifter for drifter and drogue data scan for discrete hyperspectral measurements lidar for lidar and other active remote-sensing measurements (e.g. MPL) pigment for laboratory measured pigment data (e.g. fluorometry, spectrophotometry, HPLC) bottle for other types of measurements from water samples collected at discrete depths (e.g. nutrients) diver for measurements made by a diver auv for measurements made by an autonomous underwater vehicle (auv) airborne for measurements made via an aircraft missing : Refers to the NULL value used as a numeric placeholder for any missing data in the data file. delimiter : Indicates how the columns of data are delimited. Accepted delimiters include tab , space , and comma . Only a single (1) delimiter is permitted per data file. fields : A list of the field names for each column of data included in the data file, separated by delimiter . Each entry describes the data in a single (1) column, and every column must have an entry. units : A list of the units for each column of data included in the data file, separated by delimiter . water_depth : The water (bottom) depth at the station where the data were collected (in meters). Set to missing if not known.","title":"Required fields"},{"location":"ocdb-validation-rules/#optional-fields","text":"station : The name of the station or deployment where data in the file were obtained. data_status : The condition, or status, of the data file. The value preliminary is used when the data are new and the investigator intends to analyze the data further. The value update indicates the data are being resubmitted and informs users that an additional resubmission will occur in the future. The value final is used when the investigator has no intention of revisiting the data set. secchi_depth : The secchi depth at the station where the data were collected (in meters). cloud_percent : Percent cloud cover for the entire sky. For example: 0 indicates no clouds and 100 indicates completely overcast. wave_height : The wave height at the station where the data were collected (in meters). wind_speed : The wind speed at the station where the data were collected (in meters per second).","title":"Optional fields"},{"location":"ocdb-validation-rules/#obsolete-fields","text":"station_alt_id associated_archives associated_archive_types associated_files associated_file_types original_file_name parameters measurement_depth volfilt end_header@ received identifier_product_doi below_detection_limit above_detection_limit optical_depth_warning area null_correction biotic_setting biotic_class biotic_subclass biotic_group biotic_comm_unit_y geoform_tectonic_setting geoform_physiographic_setting geoform_origin geoform geoform_type substrate_origin substrate_class substrate_subclass substrate_group substrate_subgroup water_column_biogeochemical_feature water_column_hydroform_class water_column_hydroform water_column_hydroform_type water_column_layer water_column_salinity water_column_temperature chemical_formula mass_to_charge","title":"Obsolete fields"},{"location":"ocdb-validation-rules/#records","text":"Each record is checked against the below rules. The majority of teh rules encompass checks on valid unit__s, __data type , and bounds if defined. name : a, unit : 1/m, data type : number, lower bound : 0 name : a*ph, unit : m^2/mg, data type : number, lower bound : -1e-05 name : a*srfa, unit : m^2/mg, data type : number name : aaer, unit : 1/m, data type : number, lower bound : 0 name : abs, unit : none, data type : number, lower bound : 0 name : abs_blank_ap, unit : none, data type : number, lower bound : 0 name : abs_blank_ad, unit : none, data type : number, lower bound : 0 name : abs_blank_ag, unit : none, data type : number, lower bound : 0 name : abs*, unit : m^2/mg, data type : number, lower bound : 0 name : abs_ad, unit : none, data type : number, lower bound : 0 name : abs_ag, unit : none, data type : number, lower bound : 0 name : abs_ap, unit : none, data type : number, lower bound : 0 name : abs_nacl, unit : none, data type : number, lower bound : 0 name : abundance, unit : none, data type : number, lower bound : 0 name : ad, unit : 1/m, data type : number, lower bound : 0 name : ad_unc, unit : 1/m, data type : number, lower bound : 0 name : adg, unit : 1/m, data type : number, lower bound : 0 name : ag, unit : 1/m, data type : number, lower bound : 0 name : agp, unit : 1/m, data type : number, lower bound : 0 name : asrfa, unit : 1/m, data type : number name : allo, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : alpha-beta-car, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : altitude, unit : m, data type : number, lower bound : 0 name : am, unit : none, data type : number, lower bound : 0 name : angstrom, unit : none, data type : number, lower bound : 0 name : anth, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : aot, unit : none, data type : number, lower bound : 0.005, upper bound : 2.0 name : amc, unit : umol, data type : number name : amc-leu, unit : umol/l/hr, data type : number name : ap, unit : 1/m, data type : number, lower bound : 0 name : ap_unc, unit : 1/m, data type : number, lower bound : 0 name : aph, unit : 1/m, data type : number, lower bound : 0 name : aph_unc, unit : 1/m, data type : number, lower bound : 0 name : asta, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : at, unit : degreesC, data type : number, lower bound : 0 name : aw, unit : 1/m, data type : number, lower bound : 0 name : b, unit : 1/m, data type : number, lower bound : 0 name : bb, unit : 1/m, data type : number, lower bound : 0 name : bbp, unit : 1/m, data type : number, lower bound : 0 name : bbp_bp, unit : none, data type : number, lower bound : 0 name : bbw, unit : 1/m, data type : number, lower bound : 0 name : bchl_a, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : bactp, unit : pmol/L/hr, data type : number, lower bound : 0 name : bact_abun, unit : cells/L, data type : number, lower bound : 0 name : beta-beta-car, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : beta-epi-car, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : beta-psi-car, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : bin_depth, unit : m, data type : number, lower bound : 0 name : bincount, unit : none, data type : number, lower bound : 0 name : bp, unit : 1/m, data type : number, lower bound : 0 name : bsi, unit : mmol/m^3, data type : number, lower bound : 0 name : but-fuco, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : bw, unit : 1/m, data type : number, lower bound : 0 name : c, unit : 1/m, data type : number, lower bound : 0 name : c2h3n_h, unit : ppbv, data type : number, lower bound : 0 name : c2h4o_h, unit : ppbv, data type : number, lower bound : 0 name : c2h6s_h, unit : ppbv, data type : number, lower bound : 0 name : c3h6o_h, unit : ppbv, data type : number, lower bound : 0 name : c5h8_h, unit : ppbv, data type : number, lower bound : 0 name : c6h6_h, unit : ppbv, data type : number, lower bound : 0 name : cantha, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : cdmf, unit : volts,ppb, data type : number, lower bound : 0 name : cdom, unit : mg/m^3,ug/l,ppb, data type : number, lower bound : 0 name : cg, unit : 1/m, data type : number, lower bound : 0 name : cgp, unit : 1/m, data type : number, lower bound : 0 name : ch4o_h, unit : ppbv, data type : number, lower bound : 0 name : ch4s_h, unit : ppbv, data type : number, lower bound : 0 name : chl, unit : mg/m^3,ug/l, data type : number, lower bound : 0, upper bound : 100 name : chl_ex, unit : mg/m^3,ug/l, data type : number, lower bound : 0, upper bound : 100 name : chl_a, unit : mg/m^3,ug/l, data type : number, lower bound : 0, upper bound : 100 name : chl_a_allom, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : chl_a_prime, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : chl_b, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : chl_c, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : chl_c1, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : chl_c1c2, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : chl_c2, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : chl_c3, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : chlide_a, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : chlide_b, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : cloud, unit : %, data type : number, lower bound : 0 name : cnw, unit : 1/m, data type : number, lower bound : 0 name : cond, unit : mmho/cm, data type : number, lower bound : 0 name : cp, unit : 1/m, data type : number, lower bound : 0 name : cp_gamma, unit : none, data type : number name : croco, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : cw, unit : 1/m, data type : number, lower bound : 0 name : cycle, unit : none, data type : number, lower bound : 0 name : day, unit : dd, data type : number, lower bound : 1 name : depth, unit : m,meters, data type : number, lower bound : 0 name : dewpoint, unit : degreesC, data type : number name : diadchr, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : diadino, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : diato, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : dic, unit : umol/kg, data type : number, lower bound : 0 name : dino, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : dmsa, unit : ppt, data type : number name : dmssw, unit : nmol/l, data type : number, lower bound : 0 name : dna, unit : mg/m^3, data type : number, lower bound : 0 name : doc, unit : umol/kg, data type : number, lower bound : 0 name : dp, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : dv_chl_a, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : dv_chl_b, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : echin, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : ed, unit : uW/cm^2/nm,uWcm-2nm-1, data type : number, lower bound : -0.001, upper bound : 250.0 name : edgnd, unit : volts, data type : number name : edpitch, unit : degrees, data type : number name : edroll, unit : degrees, data type : number name : elapsed_time, unit : seconds, data type : number, lower bound : 0 name : elw, unit : uW/cm^2, data type : number, lower bound : 0 name : epar, unit : uE/cm^2/s, data type : number, lower bound : 0 name : epi-epi-car, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : es, unit : uW/cm^2/nm,uWcm-2nm-1, data type : number, lower bound : -0.001, upper bound : 250.0 name : esgnd, unit : volts, data type : number name : esky, unit : uW/cm^2/nm,uWcm-2nm-1, data type : number name : espitch, unit : degrees, data type : number name : esroll, unit : degrees, data type : number name : esun, unit : uW/cm^2/nm,uWcm-2nm-1, data type : number name : esw, unit : uW/cm^2, data type : number name : et-8-carot, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : et-chlide_a, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : et-chlide_b, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : eu, unit : uW/cm^2/nm,uWcm-2nm-1, data type : number, lower bound : 0 name : eugnd, unit : volts, data type : number name : eupar, unit : uE/cm^2/s, data type : number, lower bound : 0 name : f0, unit : uW/cm^2/nm, data type : number, lower bound : 0 name : f-initial, unit : none, data type : number, lower bound : 0 name : fm, unit : none, data type : number, lower bound : 0 name : fv_fm, unit : none, data type : number, lower bound : 0 name : fuco, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : g, unit : d-1,1/d,d^-1, data type : number name : g_herb, unit : d-1,1/d,d^-1, data type : number name : gyro, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : heading, unit : degrees, data type : number, lower bound : 0, upper bound : 360.0 name : hex-fuco, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : hex-kfuco, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : hour, unit : hh, data type : number, lower bound : 0, upper bound : 23 name : it, unit : degreesC, data type : number, lower bound : 0 name : iso_c2h3n_h, unit : ppbv, data type : number, lower bound : 0 name : iso_c2h4o_h, unit : ppbv, data type : number, lower bound : 0 name : iso_c2h6s_h, unit : ppbv, data type : number, lower bound : 0 name : iso_c3h6o_h, unit : ppbv, data type : number, lower bound : 0 name : iso_ch4o_h, unit : ppbv, data type : number, lower bound : 0 name : jd, unit : jjj, data type : number, lower bound : 1, upper bound : 366 name : kd, unit : 1/m,m-1, data type : number, lower bound : 0 name : kl, unit : 1/m,m-1, data type : number, lower bound : 0 name : knf, unit : 1/m,m-1, data type : number, lower bound : 0 name : kpar, unit : 1/m,m-1, data type : number, lower bound : 0 name : ku, unit : 1/m,m-1, data type : number, lower bound : 0 name : lat, unit : degrees, data type : number, lower bound : -90.0, upper bound : 90.0 name : lightlevel, unit : %, data type : number name : lon, unit : degrees, data type : number, lower bound : -180.0, upper bound : 180.0 name : lsi, unit : mmol/m^3, data type : number, lower bound : 0 name : lsky, unit : uW/cm^2/nm,uWcm-2nm-1, data type : number, lower bound : 0 name : lt, unit : uW/cm^2/nm,uWcm-2nm-1, data type : number name : lu, unit : uW/cm^2/nm,uWcm-2nm-1, data type : number, lower bound : -0.001, upper bound : 5.0 name : lugnd, unit : volts, data type : number name : lut, unit : mg/m^3,ug/l, data type : number name : lw, unit : uW/cm^2/nm,uWcm-2nm-1, data type : number, lower bound : -0.001, upper bound : 5.0 name : lwn, unit : uW/cm^2/nm,uWcm-2nm-1, data type : number, lower bound : -0.001 name : lwnex, unit : uW/cm^2/nm,uWcm-2nm-1, data type : number, lower bound : -0.001 name : lyco, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : me-chlinde_a, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : me-chlinde_b, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : mg_dvp, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : minute, unit : mn, data type : number, lower bound : 0, upper bound : 60 name : monado, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : month, unit : mo, data type : number, lower bound : 1, upper bound : 12 name : mpf, unit : none, data type : number, lower bound : 0 name : muf, unit : umol, data type : number name : muf-but, unit : umol/l/hr, data type : number name : muf-glu, unit : umol/l/hr, data type : number name : muf-po4, unit : umol/l/hr, data type : number name : mv_chl_a, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : mv_chl_b, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : mz, unit : none, data type : number, lower bound : 0 name : n2_fix, unit : ug/m^3/d, data type : number, lower bound : 0 name : nadir, unit : degrees, data type : number name : nanoeukaryote_abun, unit : cell/l, data type : number name : nanoeukaryote_biovol, unit : m^3/l, data type : number name : nanoeukaryote_ug/l, unit : m^3/l, data type : number name : natf, unit : nE/m^2/sr/s, data type : number, lower bound : 0 name : neo, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : nccb, unit : nmol/m^2/hr, data type : number, lower bound : 0 name : ncpb, unit : nmol/m^2/hr, data type : number, lower bound : 0 name : nh4, unit : nmol/m^3, data type : number, lower bound : 0 name : no2, unit : nmol/m^3, data type : number, lower bound : 0 name : no2_no3, unit : nmol/m^3, data type : number, lower bound : 0 name : no3, unit : nmol/m^3, data type : number, lower bound : 0 name : npf, unit : none, data type : number, lower bound : 0 name : npp, unit : mg/m^3/d,ug/l/d, data type : number, lower bound : 0 name : nrb, unit : photoelectrons/usec/shot, data type : number, lower bound : 0 name : oxygen, unit : ml/L, data type : number, lower bound : 0 name : oxygen_saturation, unit : %, data type : number, lower bound : 0 name : oz, unit : dobson, data type : number, lower bound : 0 name : p-457, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : par, unit : uE/cm^2/s, data type : number, lower bound : 0 name : pc, unit : mg/m^3, data type : number, lower bound : 0 name : pco2, unit : uatm, data type : number, lower bound : 0 name : perid, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : pdrift, unit : mbar, data type : number, lower bound : 0 name : ph, unit : none, data type : number, lower bound : 0, upper bound : 14 name : phaeo, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : phide_a, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : phide_b, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : phide_c, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : phytin_a, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : phytin_b, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : phytin_c, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : phytyl-chl_c, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : phyto_carbon, unit : ug/l, data type : number, lower bound : 0 name : pic, unit : mol/m^3, data type : number, lower bound : 0 name : pim, unit : mg/l, data type : number name : picoeukaryote_abun, unit : cell/l, data type : number name : picoeukaryote_biovol, unit : m^3/l, data type : number name : picoeukaryote_carbon, unit : ug/l, data type : number name : pitch, unit : degrees, data type : number name : pn, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : po4, unit : nmol/m^3, data type : number, lower bound : 0 name : poc, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : pom, unit : mg/l, data type : number name : pon, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : pp, unit : mgC/mgchla/hr, data type : number, lower bound : 0 name : ppc, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : ppc_tcar, unit : none, data type : number, lower bound : 0 name : ppc_tpg, unit : none, data type : number, lower bound : 0 name : ppf, unit : none, data type : number, lower bound : 0 name : pras, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : pressure, unit : dbar, data type : number, lower bound : 0 name : pressure_atm, unit : mbar, data type : number, lower bound : 0 name : prochlorococcus_abun, unit : cell/l, data type : number name : prochlorococcus_biovol, unit : m^3/l, data type : number name : prochlorococcus_carbon, unit : ug/l, data type : number name : psc, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : psc_tcar, unit : none, data type : number, lower bound : 0 name : psd, unit : ul/l, data type : number, lower bound : 0 name : psp, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : psp_tpg, unit : none, data type : number, lower bound : 0 name : pulse_width, unit : seconds, data type : number, lower bound : 0 name : pvel, unit : m/s, data type : number, lower bound : 0 name : pyrophide_a, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : pyrophytin_a, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : pyrophytin_b, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : pyrophytin_c, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : q, unit : sr, data type : number, lower bound : 0 name : qc, unit : none, data type : number name : *_qc, unit : none, data type : number name : r, unit : none, data type : number, lower bound : 0 name : relabundance, unit : %, data type : number name : relaz, unit : degrees, data type : number name : rf, unit : uW/cm^2/nm/sr, data type : number, lower bound : 0 name : rl, unit : 1/sr, data type : number, lower bound : 0 name : roll, unit : degrees, data type : number name : rpi, unit : none, data type : number, lower bound : 0 name : rrs, unit : 1/sr,sr^-1, data type : number, lower bound : 0 name : rtilt, unit : degrees, data type : number name : s_ad, unit : Slope, data type : number, lower bound : 0 name : s_ag, unit : Slope, data type : number, lower bound : 0 name : sal, unit : PSU, data type : number, lower bound : 0 name : saz, unit : degrees, data type : number, lower bound : 0 name : sdy, unit : ddd, data type : number, lower bound : 0 name : second, unit : ss, data type : number, lower bound : 0, upper bound : 59 name : senz, unit : degrees, data type : number, lower bound : 0 name : sig, unit : mV, data type : number name : sigma_psii, unit : angstrom^2, data type : number, lower bound : 0 name : sigma_theta, unit : kg/m^3, data type : number, lower bound : 0 name : sigmat, unit : kg/m^3, data type : number, lower bound : 0 name : sio4, unit : mmol/m^3, data type : number, lower bound : 0 name : siphn, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : siphx, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : speed_f_w, unit : m/s, data type : number name : spm, unit : mg/L, data type : number, lower bound : 0 name : sst, unit : degreesC, data type : number name : stimf, unit : volts, data type : number, lower bound : 0 name : synechococcus_abun, unit : cell/l, data type : number name : synechococcus_biovol, unit : m^3/l, data type : number name : synechococcus_carbon, unit : ug/l, data type : number name : sz, unit : m, data type : number, lower bound : 0 name : sza, unit : degrees, data type : number, lower bound : 0 name : tacc, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : tacc_tchla, unit : none, data type : number, lower bound : 0 name : tcar, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : tchl, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : tchl_tcar, unit : none, data type : number, lower bound : 0 name : tchla_tpg, unit : none, data type : number, lower bound : 0 name : tdn, unit : mmol/m^3, data type : number, lower bound : 0 name : tdrift, unit : degreesC, data type : number, lower bound : 0 name : tilt, unit : degrees, data type : number name : time, unit : hh:mm:ss, data type : time name : time_processed, unit : hh:mm:ss, data type : time name : tot_chl_a, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : tot_chl_b, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : tot_chl_c, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : tpg, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : trans, unit : %, data type : number, lower bound : 0 name : turbidity, unit : NTU, data type : number name : u, unit : d-1,1/d,d^-1, data type : number name : u_ph, unit : d-1,1/d,d^-1, data type : number name : u_zoo, unit : d-1,1/d,d^-1, data type : number name : urea, unit : mmol/m^3, data type : number, lower bound : 0 name : vauch, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : velnorth, unit : m/s, data type : number name : veleast, unit : m/s, data type : number name : velup, unit : m/s, data type : number name : viola, unit : mg/m^3,ug/l, data type : number, lower bound : 0 name : vocair, unit : ppbv, data type : number, lower bound : 0 name : vocair, unit : ppbv, data type : number, lower bound : 0 name : volfilt, unit : L, data type : number, lower bound : 0 name : vsf, unit : 1/m/sr, data type : number, lower bound : 0 name : vsfg, unit : 1/m/sr, data type : number, lower bound : 0 name : vsfp, unit : 1/m/sr, data type : number, lower bound : 0 name : vsfw, unit : 1/m/sr, data type : number, lower bound : 0 name : vsf_angle, unit : degrees, data type : number, lower bound : 0 name : water_depth, unit : m, data type : number, lower bound : 0 name : waveht, unit : m, data type : number, lower bound : 0 name : wavelength, unit : nm, data type : number, lower bound : 0 name : wdir, unit : degrees, data type : number, lower bound : 0, upper bound : 360 name : wind, unit : m/s, data type : number, lower bound : 0 name : wt, unit : degreesC, data type : number, lower bound : -4, upper bound : 40 name : wvp, unit : cm, data type : number, lower bound : 0 name : year, unit : yyyy, data type : number, lower bound : 1975, upper bound : 2019 name : z_90, unit : m, data type : number, lower bound : 0 name : z_dcm, unit : m, data type : number, lower bound : 0 name : z_eu, unit : m, data type : number, lower bound : 0 name : z_mld, unit : m, data type : number, lower bound : 0 name : zea, unit : mg/m^3,ug/l, data type : number, lower bound : 0","title":"Records"},{"location":"ocdb-validation-rules/#field-suffixes","text":".. csv-table:: field Suffixes :widths: 15 40 20 :header-rows: 1 :file: ocdb-suffixes.csv","title":"Field suffixes"},{"location":"ocdb-validation-rules/#field-modifiers","text":".. csv-table:: The contents of :widths: 15 40 20 :header-rows: 1 :file: ocdb-modifiers.csv","title":"Field Modifiers"},{"location":"ocdb-validation-rules/#fields","text":".. csv-table:: The contents of :widths: 15 40 20 :header-rows: 1 :file: ocdb_fields.csv","title":"Fields"},{"location":"ocdb-webui/","text":"User Manual for the OCDB WebUI The aim of the Copernicus Ocean Colour Databas (OCDB) is to provide a platform to publish ocean related in-situ measurements. This tool enables researchers to upload their own in-situ data using the the Seabass data format . The main features of the OCDB database system are the provision of the data to the research community with an enhanced search facility. Further, data that is uploaded by the researchers will automatically validated during the upload process which includes a report on the validation result. The researcher also keeps full control over the submission and publication process. Search All data the submitter has agreed to publish is searchable for the public. The OCDB WebUI offers a search interface. Main feature of that interface is the search text field. You can enter a single keyword which will attempt to find data using the meta data fields provided by the submitter. This field also allows to use the so-called Lucene syntax which enables you to search for specific field values and also allows chaining. Please refer to the search chapter for more details around the Lucene search syntax. Submissions In this section we describe how to submit data. We assume that you have a user account and have logged in to the system. When clicking on the submission section a list of your submissions will appear including action buttons. New Submission If you want to add a new submission click on New Submission on the top right corner. A new dialog will open. Please add an identifier for your submission and a path where submissions files will be stored under. This will be used to i When submitting data, you will be asked to provide a publication date. Leave this empty if you do not desire your data to be searchible. Otherwise, indicate what date you would like your data to be available to the public. If you don't want the data to be published, tick 'publication' allowed. This will be shown in the submission table to the administrators. Once you initiate the submission by pushing \"Submit\" your data will be validated using plausibility and validation rules (link to rules). If the validation succeeds, the status of your submission will be VALIDATED otherwise SUBMITTED. If the system finds errors you can view them in the submission file table by clicking 'list files' on the submission table item. Submission Actions List Submission Files : Views a table of submissions files and enables you to apply actions (see chapter Submission File Actions). Process Data : Until now, the data listed in the submission is not visible in the database. The button Process Data will start the processing action. When finished, the data will be visible, burt ONLY to the submitting user and admins. When pushing this button, the data will be processed into the database and, therefore, available for searching ONLY for administrators and the submittor. Publish Data : Publish Data will do exactly the same as Process Data , but will set the status of the data to PUBLISHED and is, therefore, visible and downloadable by the public. The publishing process will check whether the data has been processed already to avoid data duplication. Delete Submission : The whole submission will be deleted including processed/published data from the search database. Halt Restart Submission : The user is able to halt a submission. This will denote the administrators that the user wished that the is NOT to be processed. Once the process is halted, the user can a Restart button will appear. Cancel Submission : Cancelling the submission will delete the database entries linked to this submission. Submission Statuses From the above actions the following statuses for submissions derive. Submitted Validated Cancelled Processed Published Submission File Actions When clicking on listing files for a submission the data and document files are listed. This new table provides the following actions: List Validation Issues : List issues the system encountered when validating the data file. Delete File : Remove the file from the submission. Download File : Download the file if a changed to the submission file is required. Upload File : Reupload a new version of the file. The old one will be overwritten. The validation will be re-run. Submission File Statuses ERROR VALIDATED WARNING","title":"WebUI"},{"location":"ocdb-webui/#user-manual-for-the-ocdb-webui","text":"The aim of the Copernicus Ocean Colour Databas (OCDB) is to provide a platform to publish ocean related in-situ measurements. This tool enables researchers to upload their own in-situ data using the the Seabass data format . The main features of the OCDB database system are the provision of the data to the research community with an enhanced search facility. Further, data that is uploaded by the researchers will automatically validated during the upload process which includes a report on the validation result. The researcher also keeps full control over the submission and publication process.","title":"User Manual for the OCDB WebUI"},{"location":"ocdb-webui/#search","text":"All data the submitter has agreed to publish is searchable for the public. The OCDB WebUI offers a search interface. Main feature of that interface is the search text field. You can enter a single keyword which will attempt to find data using the meta data fields provided by the submitter. This field also allows to use the so-called Lucene syntax which enables you to search for specific field values and also allows chaining. Please refer to the search chapter for more details around the Lucene search syntax.","title":"Search"},{"location":"ocdb-webui/#submissions","text":"In this section we describe how to submit data. We assume that you have a user account and have logged in to the system. When clicking on the submission section a list of your submissions will appear including action buttons.","title":"Submissions"},{"location":"ocdb-webui/#new-submission","text":"If you want to add a new submission click on New Submission on the top right corner. A new dialog will open. Please add an identifier for your submission and a path where submissions files will be stored under. This will be used to i When submitting data, you will be asked to provide a publication date. Leave this empty if you do not desire your data to be searchible. Otherwise, indicate what date you would like your data to be available to the public. If you don't want the data to be published, tick 'publication' allowed. This will be shown in the submission table to the administrators. Once you initiate the submission by pushing \"Submit\" your data will be validated using plausibility and validation rules (link to rules). If the validation succeeds, the status of your submission will be VALIDATED otherwise SUBMITTED. If the system finds errors you can view them in the submission file table by clicking 'list files' on the submission table item.","title":"New Submission"},{"location":"ocdb-webui/#submission-actions","text":"List Submission Files : Views a table of submissions files and enables you to apply actions (see chapter Submission File Actions). Process Data : Until now, the data listed in the submission is not visible in the database. The button Process Data will start the processing action. When finished, the data will be visible, burt ONLY to the submitting user and admins. When pushing this button, the data will be processed into the database and, therefore, available for searching ONLY for administrators and the submittor. Publish Data : Publish Data will do exactly the same as Process Data , but will set the status of the data to PUBLISHED and is, therefore, visible and downloadable by the public. The publishing process will check whether the data has been processed already to avoid data duplication. Delete Submission : The whole submission will be deleted including processed/published data from the search database. Halt Restart Submission : The user is able to halt a submission. This will denote the administrators that the user wished that the is NOT to be processed. Once the process is halted, the user can a Restart button will appear. Cancel Submission : Cancelling the submission will delete the database entries linked to this submission.","title":"Submission Actions"},{"location":"ocdb-webui/#submission-statuses","text":"From the above actions the following statuses for submissions derive. Submitted Validated Cancelled Processed Published","title":"Submission Statuses"},{"location":"ocdb-webui/#submission-file-actions","text":"When clicking on listing files for a submission the data and document files are listed. This new table provides the following actions: List Validation Issues : List issues the system encountered when validating the data file. Delete File : Remove the file from the submission. Download File : Download the file if a changed to the submission file is required. Upload File : Reupload a new version of the file. The old one will be overwritten. The validation will be re-run.","title":"Submission File Actions"},{"location":"ocdb-webui/#submission-file-statuses","text":"ERROR VALIDATED WARNING","title":"Submission File Statuses"}]}